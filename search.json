[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement d.luedecke@uke.de. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to see","title":"Contributing to see","text":"outlines propose change see.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to see","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. want fix typos documentation, please edit related .R file R/ folder. edit .Rd file man/.","code":""},{"path":"/CONTRIBUTING.html","id":"filing-an-issue","dir":"","previous_headings":"","what":"Filing an issue","title":"Contributing to see","text":"easiest way propose change new feature file issue. ’ve found bug, may also create associated issue. possible, try illustrate proposal bug minimal reproducible example.","code":""},{"path":"/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull requests","title":"Contributing to see","text":"Please create Git branch pull request (PR). contributed code roughly follow R style guide, particular easystats convention code-style. see uses roxygen2, Markdown syntax, documentation. see uses testthat. Adding tests PR makes easier merge PR code base. PR user-visible change, may add bullet top NEWS.md describing changes made. may optionally add GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to see","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/articles/bayestestR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'bayestestR' Package","text":"Existing R packages allow users easily fit large variety models extract visualize posterior draws. However, packages return limited set indices (e.g., point-estimates CIs). bayestestR package easystats provides comprehensive consistent set functions analyze describe posterior distributions generated variety models objects, including popular modeling packages rstanarm, brms BayesFactor. , see: https://easystats.github.io/bayestestR/","code":""},{"path":"/articles/bayestestR.html","id":"setup-and-model-fitting","dir":"Articles","previous_headings":"","what":"Setup and Model Fitting","title":"Plotting Functions for the 'bayestestR' Package","text":"","code":"library(bayestestR) library(insight) library(see) library(rstanarm) library(ggplot2)  theme_set(theme_modern()) set.seed(123) # model with fixed effects only model <- rstanarm::stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)  # model with fixed and random effects as well as zero-inflation component model2 <- insight::download_model(\"brms_zi_3\")"},{"path":"/articles/bayestestR.html","id":"density-estimation","dir":"Articles","previous_headings":"","what":"Density Estimation","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) Plotting density estimations Bayesian regression models produce plots posterior distributions model parameters, .e. posterior interval estimates MCMC draws. default, distributions “stacked”, .e. overlaying .  get ridge lines separated parameters, use stack = FALSE.","code":"result <- estimate_density(model)  plot(result) plot(result, stack = FALSE)"},{"path":"/articles/bayestestR.html","id":"adding-prior-samples","dir":"Articles","previous_headings":"Density Estimation","what":"Adding Prior Samples","title":"Plotting Functions for the 'bayestestR' Package","text":"many plots, model defined priors, can add layer prior distribution parameters priors = TRUE.","code":"plot(result, stack = FALSE, priors = TRUE)"},{"path":"/articles/bayestestR.html","id":"density-estimation-of-posterior-samples-from-describe_posterior","dir":"Articles","previous_headings":"","what":"Density Estimation of Posterior Samples from describe_posterior()","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) convenient short cut plot posterior samples directly bayestestR::describe_posterior(), internally calls estimate_density() plot():","code":"result <- describe_posterior(model) plot(result)"},{"path":"/articles/bayestestR.html","id":"probability-of-direction-pd","dir":"Articles","previous_headings":"","what":"Probability of Direction (pd)","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) probability direction (also known maximum probability effect - MPE) varies 50% 100% (.e., 0.5 1) can interpreted probability (expressed percentage) parameter (described posterior distribution) strictly positive negative (whichever probable). mathematically defined proportion posterior distribution median’s sign. Although differently expressed, index fairly similar (.e., strongly correlated) frequentist p-value  complex models different components, component displayed separate facet. Use n_columns define layout, .e. many columns used display facets.","code":"result <- p_direction(model)  result #> Probability of Direction #>  #> Parameter                     |     pd #> -------------------------------------- #> (Intercept)                   |   100% #> Petal.Width                   | 92.30% #> Speciesversicolor             | 94.20% #> Speciesvirginica              | 80.47% #> Petal.Width:Speciesversicolor | 79.20% #> Petal.Width:Speciesvirginica  | 62.20%  plot(result) result <- p_direction(model2, effects = \"all\", component = \"all\")  result #> Probability of Direction #>  #> Parameter   |     pd #> -------------------- #> (Intercept) | 90.00% #> child       |   100% #> camper      |   100% #>  #> # Fixed effects (zero-inflated) #>  #> Parameter   |     pd #> -------------------- #> (Intercept) | 78.00% #> child       |   100% #> camper      | 98.40% #>  #> # Random effects (conditional) Intercept: persons #>  #> Parameter |     pd #> ------------------ #> persons.1 | 92.00% #> persons.2 | 50.00% #> persons.3 | 79.60% #> persons.4 | 96.80% #>  #> # Random effects (zero-inflated) Intercept: persons #>  #> Parameter |     pd #> ------------------ #> persons.1 | 94.80% #> persons.2 | 63.20% #> persons.3 | 64.00% #> persons.4 | 98.00% #>  #> # Random effects (conditional) SD/Cor: persons #>  #> Parameter   |   pd #> ------------------ #> (Intercept) | 100% #>  #> # Random effects (zero-inflated) SD/Cor: persons #>  #> Parameter   |   pd #> ------------------ #> (Intercept) | 100%  plot(result) plot(result, n_columns = NULL)"},{"path":"/articles/bayestestR.html","id":"adding-prior-samples-1","dir":"Articles","previous_headings":"Probability of Direction (pd)","what":"Adding Prior Samples","title":"Plotting Functions for the 'bayestestR' Package","text":"","code":"result <- p_direction(model) plot(result, priors = TRUE)"},{"path":"/articles/bayestestR.html","id":"practical-significance","dir":"Articles","previous_headings":"","what":"Practical Significance","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) probability practical significance conceptualized unidirectional equivalence test. returns probability effect given threshold corresponding negligible effect median’s direction. Mathematically, defined proportion posterior distribution median sign threshold.","code":"result <- p_significance(model)  result #> Practical Significance (threshold: 0.08) #>  #> Parameter                     |   ps #> ------------------------------------ #> (Intercept)                   | 1.00 #> Petal.Width                   | 0.90 #> Speciesversicolor             | 0.92 #> Speciesvirginica              | 0.76 #> Petal.Width:Speciesversicolor | 0.75 #> Petal.Width:Speciesvirginica  | 0.58  plot(result) result <- p_significance(model2, effects = \"all\", component = \"all\")  result #> Practical Significance (threshold: 0.10) #>  #> Parameter   |   ps #> ------------------ #> (Intercept) | 0.88 #> child       | 1.00 #> camper      | 1.00 #>  #> # Fixed effects (zero-inflated) #>  #> Parameter   |   ps #> ------------------ #> (Intercept) | 0.73 #> child       | 1.00 #> camper      | 0.96 #>  #> # Random effects (conditional) Intercept: persons #>  #> Parameter |   ps #> ---------------- #> persons.1 | 0.90 #> persons.2 | 0.45 #> persons.3 | 0.78 #> persons.4 | 0.96 #>  #> # Random effects (zero-inflated) Intercept: persons #>  #> Parameter |   ps #> ---------------- #> persons.1 | 0.93 #> persons.2 | 0.54 #> persons.3 | 0.59 #> persons.4 | 0.97 #>  #> # Random effects (conditional) SD/Cor: persons #>  #> Parameter   |   ps #> ------------------ #> (Intercept) | 1.00 #>  #> # Random effects (zero-inflated) SD/Cor: persons #>  #> Parameter   |   ps #> ------------------ #> (Intercept) | 1.00  plot(result) plot(result, n_columns = NULL)"},{"path":"/articles/bayestestR.html","id":"adding-prior-samples-2","dir":"Articles","previous_headings":"Practical Significance","what":"Adding Prior Samples","title":"Plotting Functions for the 'bayestestR' Package","text":"","code":"result <- p_significance(model) plot(result, priors = TRUE)"},{"path":"/articles/bayestestR.html","id":"point-estimates","dir":"Articles","previous_headings":"","what":"Point Estimates","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) point_estimate() computes various point-estimates, mean, median MAP, describe posterior distributions. plot()-method shows posterior distribution related parameters emphasizes point estimate within plot.","code":"result <- point_estimate(model)  result #> Point Estimate #>  #> Parameter                     | Median |  Mean |   MAP #> ------------------------------------------------------ #> (Intercept)                   |   4.80 |  4.80 |  4.79 #> Petal.Width                   |   0.86 |  0.86 |  0.85 #> Speciesversicolor             |  -0.76 | -0.75 | -0.79 #> Speciesvirginica              |   0.46 |  0.46 |  0.53 #> Petal.Width:Speciesversicolor |   0.56 |  0.56 |  0.60 #> Petal.Width:Speciesvirginica  |  -0.21 | -0.20 | -0.24  plot(result) result <- point_estimate(model, centrality = c(\"map\", \"mean\"))  result #> Point Estimate #>  #> Parameter                     |  Mean |   MAP #> --------------------------------------------- #> (Intercept)                   |  4.80 |  4.79 #> Petal.Width                   |  0.86 |  0.85 #> Speciesversicolor             | -0.75 | -0.79 #> Speciesvirginica              |  0.46 |  0.53 #> Petal.Width:Speciesversicolor |  0.56 |  0.60 #> Petal.Width:Speciesvirginica  | -0.20 | -0.24  plot(result, panel = FALSE)[[2]]"},{"path":"/articles/bayestestR.html","id":"adding-prior-samples-3","dir":"Articles","previous_headings":"Point Estimates","what":"Adding Prior Samples","title":"Plotting Functions for the 'bayestestR' Package","text":"","code":"result <- point_estimate(model) plot(result, priors = TRUE)"},{"path":"/articles/bayestestR.html","id":"highest-density-interval-hdi","dir":"Articles","previous_headings":"","what":"Highest Density Interval (HDI)","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) hdi() computes Highest Density Interval (HDI) posterior distributions. points within interval higher probability density points outside interval. HDI can used context uncertainty characterisation posterior distributions Credible Interval (CI).","code":"result <- hdi(model, ci = c(0.5, 0.75, 0.89, 0.95))  result #> Highest Density Interval #>  #> Parameter                     |        50% HDI |        75% HDI |       89% HDI |       95% HDI #> ----------------------------------------------------------------------------------------------- #> (Intercept)                   | [ 4.69,  4.90] | [ 4.59,  4.96] | [ 4.52, 5.04] | [ 4.47, 5.10] #> Petal.Width                   | [ 0.41,  1.20] | [ 0.19,  1.56] | [-0.07, 1.83] | [-0.34, 1.96] #> Speciesversicolor             | [-1.09, -0.44] | [-1.22, -0.13] | [-1.46, 0.06] | [-1.65, 0.23] #> Speciesvirginica              | [ 0.07,  0.77] | [-0.11,  1.11] | [-0.36, 1.29] | [-0.55, 1.49] #> Petal.Width:Speciesversicolor | [ 0.02,  0.94] | [-0.19,  1.36] | [-0.60, 1.53] | [-0.67, 1.90] #> Petal.Width:Speciesvirginica  | [-0.64,  0.22] | [-0.92,  0.52] | [-1.21, 0.84] | [-1.45, 1.03]  plot(result) + scale_fill_flat() result <- hdi(model2, ci = c(0.5, 0.75, 0.89), effects = \"all\", component = \"all\")  plot(result, n_columns = 2) + scale_fill_metro() plot(result, n_columns = NULL) + scale_fill_material()"},{"path":"/articles/bayestestR.html","id":"support-interval","dir":"Articles","previous_headings":"","what":"Support Interval","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) Plotting result call si() results plot presenting prior posterior distributions parameter (note default show_intercept = FALSE). support interval denoted shaded border.","code":"result <- si(model) result #> Support Interval #>  #> Parameter                     |     BF = 1 SI | Effects |   Component #> --------------------------------------------------------------------- #> (Intercept)                   | [ 4.38, 5.21] |   fixed | conditional #> Petal.Width                   | [-0.17, 1.92] |   fixed | conditional #> Speciesversicolor             | [-1.71, 0.20] |   fixed | conditional #> Speciesvirginica              | [-0.56, 1.48] |   fixed | conditional #> Petal.Width:Speciesversicolor | [-0.53, 1.73] |   fixed | conditional #> Petal.Width:Speciesvirginica  | [-1.21, 0.77] |   fixed | conditional  plot(result) +   scale_color_metro(palette = \"ice\") +   scale_fill_metro(palette = \"ice\") plot(result, support_only = TRUE) +   scale_color_metro(palette = \"ice\") +   scale_fill_metro(palette = \"ice\")"},{"path":"/articles/bayestestR.html","id":"region-of-practical-equivalence-rope","dir":"Articles","previous_headings":"","what":"Region of Practical Equivalence (ROPE)","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) rope() computes proportion (percentage) HDI posterior distribution lies within region practical equivalence (ROPE). related plot()-method plots posterior distributions, coloring different HDI levels, adds “rope” region plot indicates portion posterior distributions lies inside (outside) ROPE.","code":"result <- rope(model, ci = c(0.9, 0.95))  result #> # Proportions of samples inside the ROPE [-0.08, 0.08]: #>  #> ROPE for the 90% HDI: #>  #> Parameter                     | inside ROPE #> ------------------------------------------- #> (Intercept)                   |      0.00 % #> Petal.Width                   |      4.67 % #> Speciesversicolor             |      4.42 % #> Speciesvirginica              |      9.66 % #> Petal.Width:Speciesversicolor |      8.28 % #> Petal.Width:Speciesvirginica  |      9.91 % #>  #>  #> ROPE for the 95% HDI: #>  #> Parameter                     | inside ROPE #> ------------------------------------------- #> (Intercept)                   |      0.00 % #> Petal.Width                   |      4.42 % #> Speciesversicolor             |      4.55 % #> Speciesvirginica              |      9.16 % #> Petal.Width:Speciesversicolor |      7.84 % #> Petal.Width:Speciesvirginica  |      9.39 %  plot(result, rope_color = \"red\") +   scale_fill_brewer(palette = \"Greens\", direction = -1) result <- rope(model2, ci = c(0.9, 0.95), effects = \"all\", component = \"all\")  result #> # Proportions of samples inside the ROPE [-0.10, 0.10]: #>  #> ROPE for the 90% HDI: #>  #> # Fixed Effects (Conditional Model) #>  #> Parameter | inside ROPE #> ----------------------- #> Intercept |      2.65 % #> child     |      0.00 % #> camper    |      0.00 % #>  #> # Fixed Effects (Zero-Inflated Model) #>  #> Parameter | inside ROPE #> ----------------------- #> Intercept |     11.06 % #> child     |      0.00 % #> camper    |      0.00 % #>  #> # Random Effects (Conditional Model) #>  #> Parameter              | inside ROPE #> ------------------------------------ #> r_persons[1,Intercept] |      1.77 % #> r_persons[2,Intercept] |     14.60 % #> r_persons[3,Intercept] |      5.31 % #> r_persons[4,Intercept] |      0.88 % #> SD persons (Intercept) |      0.00 % #>  #> # Random Effects (Zero-Inflated Model) #>  #> Parameter              | inside ROPE #> ------------------------------------ #> r_persons[1,Intercept] |      3.54 % #> r_persons[2,Intercept] |     15.49 % #> r_persons[3,Intercept] |     12.83 % #> r_persons[4,Intercept] |      0.00 % #> SD persons (Intercept) |      0.00 % #>  #>  #> ROPE for the 95% HDI: #>  #> # Fixed Effects (Conditional Model) #>  #> Parameter | inside ROPE #> ----------------------- #> Intercept |      2.51 % #> child     |      0.00 % #> camper    |      0.00 % #>  #> # Fixed Effects (Zero-Inflated Model) #>  #> Parameter | inside ROPE #> ----------------------- #> Intercept |     10.46 % #> child     |      0.00 % #> camper    |      1.67 % #>  #> # Random Effects (Conditional Model) #>  #> Parameter              | inside ROPE #> ------------------------------------ #> r_persons[1,Intercept] |      2.09 % #> r_persons[2,Intercept] |     13.81 % #> r_persons[3,Intercept] |      5.02 % #> r_persons[4,Intercept] |      2.09 % #> SD persons (Intercept) |      0.00 % #>  #> # Random Effects (Zero-Inflated Model) #>  #> Parameter              | inside ROPE #> ------------------------------------ #> r_persons[1,Intercept] |      3.35 % #> r_persons[2,Intercept] |     14.64 % #> r_persons[3,Intercept] |     12.13 % #> r_persons[4,Intercept] |      0.00 % #> SD persons (Intercept) |      0.00 %  plot(result, rope_color = \"grey70\") +   scale_fill_social()"},{"path":"/articles/bayestestR.html","id":"test-for-practical-equivalence","dir":"Articles","previous_headings":"","what":"Test for Practical Equivalence","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) test practical equivalence based “HDI+ROPE decision rule” check whether parameter values accepted rejected explicitly formulated “null hypothesis” (.e., ROPE). words, checks percentage 89% HDI null region (ROPE). percentage sufficiently low, null hypothesis rejected. percentage sufficiently high, null hypothesis accepted.","code":"result <- equivalence_test(model)  result #> # Test for Practical Equivalence #>  #>   ROPE: [-0.08 0.08] #>  #> Parameter                     |        H0 | inside ROPE |      95% HDI #> ---------------------------------------------------------------------- #> (Intercept)                   |  Rejected |      0.00 % | [ 4.47 5.10] #> Petal.Width                   | Undecided |      4.42 % | [-0.34 1.96] #> Speciesversicolor             | Undecided |      4.55 % | [-1.65 0.23] #> Speciesvirginica              | Undecided |      9.16 % | [-0.55 1.49] #> Petal.Width:Speciesversicolor | Undecided |      7.84 % | [-0.67 1.90] #> Petal.Width:Speciesvirginica  | Undecided |      9.39 % | [-1.45 1.03]  plot(result) +   theme_blackboard() +   scale_fill_material() result <- equivalence_test(model, ci = c(.89, .95))  result  plot(result) +   theme_abyss() +   scale_fill_flat() result <- equivalence_test(model2, ci = c(.89, .95), effects = \"all\", component = \"all\")  result  plot(result, n_columns = 3) + theme_modern()"},{"path":[]},{"path":"/articles/bayestestR.html","id":"bayes-factors-for-model-parameters","dir":"Articles","previous_headings":"Bayes Factors (BFs)","what":"Bayes Factors for Model Parameters","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) Plotting result call bayesfactor_parameters() results plot presenting prior posterior distributions parameter (note default show_intercept = FALSE). point null tested, two dots represent density null value - ratio heights value Savage-Dickey Bayes factor:  interval null tested, two dashed lines mark edges null interval value - Bayes factor represents degree distribution mass posterior shifted outside inside null interval relative prior distribution:","code":"result <- bayesfactor_parameters(model)  result #> Bayes Factor (Savage-Dickey density ratio) #>  #> Parameter                     |       BF #> ---------------------------------------- #> (Intercept)                   | 1.43e+33 #> Petal.Width                   |    0.594 #> Speciesversicolor             |    0.360 #> Speciesvirginica              |    0.174 #> Petal.Width:Speciesversicolor |    0.284 #> Petal.Width:Speciesvirginica  |    0.321 #>  #> * Evidence Against The Null: 0  plot(result) +   scale_color_material() +   scale_fill_material() result <- bayesfactor_parameters(model, null = rope_range(model))  result #> Bayes Factor (Null-Interval) #>  #> Parameter                     |       BF #> ---------------------------------------- #> (Intercept)                   | 1.00e+33 #> Petal.Width                   |    0.598 #> Speciesversicolor             |    0.337 #> Speciesvirginica              |    0.167 #> Petal.Width:Speciesversicolor |    0.271 #> Petal.Width:Speciesvirginica  |    0.295 #>  #> * Evidence Against The Null: [-0.083, 0.083]  plot(result) +   scale_color_material() +   scale_fill_material()"},{"path":"/articles/bayestestR.html","id":"bayes-factors-for-model-comparison","dir":"Articles","previous_headings":"Bayes Factors (BFs)","what":"Bayes Factors for Model Comparison","title":"Plotting Functions for the 'bayestestR' Package","text":"(related function documentation) Pizza plots visual way representing posterior probabilities several models, ratio areas two models corresponding posterior odds.1 possible plot compared models one (pizza) pie:  also possible plot one pizza model denominator model (doesn’t like pizza?):","code":"lm0 <- lm(qsec ~ 1, data = mtcars) lm1 <- lm(qsec ~ drat, data = mtcars) lm2 <- lm(qsec ~ wt, data = mtcars) lm3 <- lm(qsec ~ drat + wt, data = mtcars)  result <- bayesfactor_models(lm1, lm2, lm3, denominator = lm0)  result #> Bayes Factors for Model Comparison #>  #>       Model        BF #> [lm1] drat      0.202 #> [lm2] wt        0.290 #> [lm3] drat + wt 0.053 #>  #> * Against Denominator: [lm0] (Intercept only) #> *   Bayes Factor Type: BIC approximation plot(result, n_pies = \"one\", value = \"probability\") +   scale_fill_pizza(reverse = TRUE) plot(result, n_pies = \"many\", value = \"BF\") +   scale_fill_flat(palette = \"rainbow\", reverse = TRUE)"},{"path":"/articles/correlation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'correlation' Package","text":"correlation easystats package focused correlation analysis. ’s lightweight, easy use, allows computation many different types correlation, including: ✅ Pearson’s correlation ✅ Spearman’s rank correlation ✅ Kendall’s rank correlation ✅ Biweight midcorrelation ✅ Distance correlation ✅ Percentage bend correlation ✅ Shepherd’s Pi correlation ✅ Blomqvist’s coefficient ✅ Hoeffding’s D ✅ Gamma correlation ✅ Gaussian rank correlation ✅ Point-Biserial biserial correlation ✅ Winsorized correlation ✅ Polychoric correlation ✅ Tetrachoric correlation ✅ Multilevel correlation overview description correlations types available . Moreover, many correlation types available partial within Bayesian framework.","code":""},{"path":"/articles/correlation.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plotting Functions for the 'correlation' Package","text":"","code":"library(correlation) library(see) library(ggplot2) data(mtcars) data(iris)"},{"path":"/articles/correlation.html","id":"correlation-scatterplot","dir":"Articles","previous_headings":"","what":"Correlation Scatterplot","title":"Plotting Functions for the 'correlation' Package","text":"(related function documentation) easy visualize correlation tests correlation see.  can even customize make beautiful:","code":"result <- cor_test(iris, \"Sepal.Length\", \"Petal.Width\")  plot(result) plot(result,       point = list(aes = list(color = \"Petal.Width\", size = \"Sepal.Length\"),                   alpha = 0.66),      smooth = list(color = \"black\", se = FALSE)) +   see::theme_modern() +   see::scale_color_material_c(palette = \"rainbow\", guide = \"none\") +   scale_size_continuous(guide = \"none\")"},{"path":"/articles/correlation.html","id":"correlation-matrix","dir":"Articles","previous_headings":"","what":"Correlation Matrix","title":"Plotting Functions for the 'correlation' Package","text":"(related function documentation) default output correlation() detailed overview including test statistic, p-values confidence intervals. shorter summary matrix-layout can obtained using summary(). result summary() can used create plot.  change style geoms, use show_data-argument.  “redundant” summary can plotted well:  corrlation function also provides convenient way change names selected variables:","code":"result <- correlation(iris)  result #> # Correlation Matrix (pearson-method) #>  #> Parameter1   |   Parameter2 |     r |         95% CI | t(148) |         p #> ------------------------------------------------------------------------- #> Sepal.Length |  Sepal.Width | -0.12 | [-0.27,  0.04] |  -1.44 | 0.152     #> Sepal.Length | Petal.Length |  0.87 | [ 0.83,  0.91] |  21.65 | < .001*** #> Sepal.Length |  Petal.Width |  0.82 | [ 0.76,  0.86] |  17.30 | < .001*** #> Sepal.Width  | Petal.Length | -0.43 | [-0.55, -0.29] |  -5.77 | < .001*** #> Sepal.Width  |  Petal.Width | -0.37 | [-0.50, -0.22] |  -4.79 | < .001*** #> Petal.Length |  Petal.Width |  0.96 | [ 0.95,  0.97] |  43.39 | < .001*** #>  #> p-value adjustment method: Holm (1979) #> Observations: 150  summary(result) #> # Correlation Matrix (pearson-method) #>  #> Parameter    | Petal.Width | Petal.Length | Sepal.Width #> ------------------------------------------------------- #> Sepal.Length |     0.82*** |      0.87*** |       -0.12 #> Sepal.Width  |    -0.37*** |     -0.43*** |             #> Petal.Length |     0.96*** |              |             #>  #> p-value adjustment method: Holm (1979) s <- summary(result) plot(s) plot(s, show_data = \"points\") s <- summary(result, redundant = TRUE)  s #> # Correlation Matrix (pearson-method) #>  #> Parameter    | Sepal.Length | Sepal.Width | Petal.Length | Petal.Width #> ---------------------------------------------------------------------- #> Sepal.Length |      1.00*** |       -0.12 |      0.87*** |     0.82*** #> Sepal.Width  |        -0.12 |     1.00*** |     -0.43*** |    -0.37*** #> Petal.Length |      0.87*** |    -0.43*** |      1.00*** |     0.96*** #> Petal.Width  |      0.82*** |    -0.37*** |      0.96*** |     1.00*** #>  #> p-value adjustment method: Holm (1979)  plot(s) plot(summary(correlation(   data = select(mtcars, wt, mpg, drat),   rename = c(\"weight\", \"miles per gallon\", \"rear axle ratio\") )))"},{"path":"/articles/correlation.html","id":"gaussian-graphical-models-ggms","dir":"Articles","previous_headings":"","what":"Gaussian Graphical Models (GGMs)","title":"Plotting Functions for the 'correlation' Package","text":"create Gaussian Graphical Models plot, library ggraph needs loaded first.","code":"library(ggraph) result <- correlation(mtcars, partial = TRUE)  result #> # Correlation Matrix (pearson-method) #>  #> Parameter1 | Parameter2 |     r |         95% CI | t(30) |         p #> -------------------------------------------------------------------- #> mpg        |        cyl | -0.02 | [-0.37,  0.33] | -0.13 | > .999    #> mpg        |       disp |  0.16 | [-0.20,  0.48] |  0.89 | > .999    #> mpg        |         hp | -0.21 | [-0.52,  0.15] | -1.18 | > .999    #> mpg        |       drat |  0.10 | [-0.25,  0.44] |  0.58 | > .999    #> mpg        |         wt | -0.39 | [-0.65, -0.05] | -2.34 | > .999    #> mpg        |       qsec |  0.24 | [-0.12,  0.54] |  1.34 | > .999    #> mpg        |         vs |  0.03 | [-0.32,  0.38] |  0.18 | > .999    #> mpg        |         am |  0.26 | [-0.10,  0.56] |  1.46 | > .999    #> mpg        |       gear |  0.10 | [-0.26,  0.43] |  0.52 | > .999    #> mpg        |       carb | -0.05 | [-0.39,  0.30] | -0.29 | > .999    #> cyl        |       disp |  0.27 | [-0.09,  0.56] |  1.51 | > .999    #> cyl        |         hp |  0.17 | [-0.19,  0.49] |  0.97 | > .999    #> cyl        |       drat | -0.27 | [-0.57,  0.09] | -1.55 | > .999    #> cyl        |         wt | -0.11 | [-0.44,  0.25] | -0.62 | > .999    #> cyl        |       qsec | -0.26 | [-0.56,  0.10] | -1.48 | > .999    #> cyl        |         vs | -0.32 | [-0.60,  0.03] | -1.85 | > .999    #> cyl        |         am | -0.25 | [-0.55,  0.11] | -1.39 | > .999    #> cyl        |       gear | -0.35 | [-0.62,  0.00] | -2.04 | > .999    #> cyl        |       carb |  0.23 | [-0.13,  0.53] |  1.27 | > .999    #> disp       |         hp |  0.54 | [ 0.24,  0.75] |  3.52 | 0.072     #> disp       |       drat |  0.10 | [-0.26,  0.43] |  0.53 | > .999    #> disp       |         wt |  0.76 | [ 0.56,  0.88] |  6.43 | < .001*** #> disp       |       qsec | -0.31 | [-0.60,  0.04] | -1.80 | > .999    #> disp       |         vs | -0.10 | [-0.44,  0.25] | -0.57 | > .999    #> disp       |         am | -0.07 | [-0.41,  0.29] | -0.37 | > .999    #> disp       |       gear |  0.06 | [-0.29,  0.40] |  0.34 | > .999    #> disp       |       carb | -0.66 | [-0.82, -0.40] | -4.77 | 0.002**   #> hp         |       drat | -0.06 | [-0.40,  0.29] | -0.34 | > .999    #> hp         |         wt | -0.30 | [-0.59,  0.06] | -1.72 | > .999    #> hp         |       qsec | -0.05 | [-0.39,  0.30] | -0.29 | > .999    #> hp         |         vs |  0.27 | [-0.08,  0.57] |  1.55 | > .999    #> hp         |         am |  0.10 | [-0.26,  0.43] |  0.55 | > .999    #> hp         |       gear |  0.11 | [-0.25,  0.44] |  0.59 | > .999    #> hp         |       carb |  0.50 | [ 0.19,  0.72] |  3.19 | 0.167     #> drat       |         wt | -0.11 | [-0.44,  0.25] | -0.62 | > .999    #> drat       |       qsec | -0.06 | [-0.40,  0.29] | -0.33 | > .999    #> drat       |         vs |  0.03 | [-0.33,  0.37] |  0.14 | > .999    #> drat       |         am |  0.12 | [-0.24,  0.45] |  0.68 | > .999    #> drat       |       gear |  0.06 | [-0.29,  0.40] |  0.35 | > .999    #> drat       |       carb |  0.21 | [-0.15,  0.52] |  1.18 | > .999    #> wt         |       qsec |  0.55 | [ 0.24,  0.75] |  3.57 | 0.063     #> wt         |         vs | -0.06 | [-0.40,  0.29] | -0.36 | > .999    #> wt         |         am |  0.02 | [-0.33,  0.36] |  0.10 | > .999    #> wt         |       gear | -0.13 | [-0.46,  0.23] | -0.71 | > .999    #> wt         |       carb |  0.62 | [ 0.34,  0.80] |  4.30 | 0.009**   #> qsec       |         vs |  0.35 | [ 0.00,  0.62] |  2.02 | > .999    #> qsec       |         am | -0.32 | [-0.60,  0.03] | -1.84 | > .999    #> qsec       |       gear | -0.10 | [-0.43,  0.26] | -0.56 | > .999    #> qsec       |       carb | -0.25 | [-0.55,  0.11] | -1.40 | > .999    #> vs         |         am | -0.21 | [-0.52,  0.15] | -1.18 | > .999    #> vs         |       gear |  0.04 | [-0.31,  0.38] |  0.22 | > .999    #> vs         |       carb | -0.09 | [-0.43,  0.27] | -0.50 | > .999    #> am         |       gear |  0.28 | [-0.08,  0.57] |  1.58 | > .999    #> am         |       carb | -0.05 | [-0.39,  0.31] | -0.25 | > .999    #> gear       |       carb |  0.43 | [ 0.09,  0.68] |  2.59 | 0.727     #>  #> p-value adjustment method: Holm (1979) #> Observations: 32  plot(result)"},{"path":"/articles/effectsize.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'effectsize' Package","text":"effectsize package easystats provides utilities work indices effect size standardized parameters, allowing computation conversion indices Cohen’s d, r, odds-ratios, etc. , see: https://easystats.github.io/effectsize/","code":""},{"path":"/articles/effectsize.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Plotting Functions for the 'effectsize' Package","text":"","code":"library(poorman) library(effectsize) library(see) data(mtcars) data(iris)"},{"path":"/articles/effectsize.html","id":"effect-size-tables","dir":"Articles","previous_headings":"","what":"Effect size tables","title":"Plotting Functions for the 'effectsize' Package","text":"(related function documentation)","code":"aov(mpg ~ factor(am) * factor(cyl), data = mtcars) %>%   eta_squared() %>%   plot() t_to_d(t = c(1, -1.3, -3, 2.3), df_error = c(40, 35, 40, 85)) %>%   plot()"},{"path":"/articles/effectsize.html","id":"equivalence-tests","dir":"Articles","previous_headings":"","what":"Equivalence tests","title":"Plotting Functions for the 'effectsize' Package","text":"(related function documentation)","code":"aov(mpg ~ factor(am) * factor(cyl), data = mtcars) %>%   eta_squared() %>%   equivalence_test(range = 0.3) %>%   plot() t_to_d(t = c(1, -1.3, -3, 2.3), df_error = c(40, 35, 40, 85)) %>%   equivalence_test(range = 1) %>%   plot()"},{"path":"/articles/modelbased.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'modelbased' Package","text":"modelbased package easystats ecosystem help model-based estimations, easily compute marginal means, contrast analysis model predictions. , see: https://easystats.github.io/modelbased/","code":""},{"path":"/articles/modelbased.html","id":"setup-and-model-fitting","dir":"Articles","previous_headings":"","what":"Setup and Model Fitting","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"library(modelbased) library(rstanarm) library(ggplot2) library(see)  theme_set(theme_modern())  model <- stan_glm(Sepal.Width ~ Species, data = iris, refresh = 0)"},{"path":"/articles/modelbased.html","id":"pairwise-contrasts","dir":"Articles","previous_headings":"","what":"Pairwise Contrasts","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"contrasts <- estimate_contrasts(model) means <- estimate_means(model)  plot(contrasts, means)"},{"path":[]},{"path":"/articles/modelbased.html","id":"interactions-with-continuous-interaction-terms","dir":"Articles","previous_headings":"Estimate model-based predictions for the response","what":"Interactions, with continuous interaction terms","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"data(mtcars) model <- lm(mpg ~ wt * gear, data = mtcars)  result <- estimate_expectation(model, data = \"grid\") plot(result)"},{"path":"/articles/modelbased.html","id":"interactions-with-continuous-interaction-terms-1","dir":"Articles","previous_headings":"Estimate model-based predictions for the response","what":"Interactions, with continuous interaction terms","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"data(mtcars) mtcars$gear <- as.factor(mtcars$gear) model <- lm(mpg ~ wt * gear, data = mtcars)  result <- estimate_expectation(model, data = \"grid\") plot(result)"},{"path":"/articles/modelbased.html","id":"plot-group-level-scores-of-mixed-models","dir":"Articles","previous_headings":"","what":"Plot group-level scores of mixed models","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"library(lme4) model <- lmer(Reaction ~ Days + (1 | Subject), data = sleepstudy)  result <- estimate_grouplevel(model) plot(result) model <- lmer(Reaction ~ Days + (1 + Days | Subject), data = sleepstudy)  result <- estimate_grouplevel(model) plot(result)"},{"path":"/articles/modelbased.html","id":"estimate-slopes","dir":"Articles","previous_headings":"","what":"Estimate slopes","title":"Plotting Functions for the 'modelbased' Package","text":"","code":"data(iris) model <- lm(Sepal.Width ~ Species * Petal.Length, data = iris)  result <- estimate_slopes(model, trend = \"Petal.Length\", at = \"Species\") plot(result) model <- lm(Petal.Length ~ Species * poly(Sepal.Width, 3), data = iris)  result <- estimate_slopes(model, at = c(\"Sepal.Width\", \"Species\")) plot(result)"},{"path":"/articles/parameters.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'parameters' Package","text":"parameters’ primary goal provide utilities processing parameters various statistical models (see list supported models). Beyond computing p-values, CIs, Bayesian indices measures wide variety models, package implements features like bootstrapping parameters models, feature reduction (feature extraction variable selection), tools data reduction like functions perform cluster, factor principal component analysis. Another important goal parameters package facilitate streamline process reporting results statistical models, includes easy intuitive calculation standardized estimates robust standard errors p-values. parameters therefor offers simple unified syntax process large variety (model) objects many different packages. , see: https://easystats.github.io/parameters/","code":""},{"path":"/articles/parameters.html","id":"setup-and-model-fitting","dir":"Articles","previous_headings":"","what":"Setup and Model Fitting","title":"Plotting Functions for the 'parameters' Package","text":"","code":"library(parameters) library(effectsize) library(insight) library(see) library(glmmTMB) library(lme4) library(lavaan) library(metafor) library(ggplot2) library(splines) data(\"Salamanders\") data(\"iris\") data(\"sleepstudy\") data(\"qol_cancer\")  set.seed(12345) sleepstudy$grp <- sample(1:5, size = 180, replace = TRUE)  theme_set(theme_modern()) # fit three example model model1 <- glmmTMB(   count ~ spp + mined + (1 | site),   ziformula =  ~mined,   family = poisson(),   data = Salamanders ) model_parameters(model1, effects = \"fixed\") #> # Fixed Effects #>  #> Parameter   | Log-Mean |   SE |         95% CI |     z |      p #> --------------------------------------------------------------- #> (Intercept) |    -0.36 | 0.28 | [-0.90,  0.18] | -1.30 | 0.194  #> spp [PR]    |    -1.27 | 0.24 | [-1.74, -0.80] | -5.27 | < .001 #> spp [DM]    |     0.27 | 0.14 | [ 0.00,  0.54] |  1.95 | 0.051  #> spp [EC-A]  |    -0.57 | 0.21 | [-0.97, -0.16] | -2.75 | 0.006  #> spp [EC-L]  |     0.67 | 0.13 | [ 0.41,  0.92] |  5.20 | < .001 #> spp [DES-L] |     0.63 | 0.13 | [ 0.38,  0.87] |  4.96 | < .001 #> spp [DF]    |     0.12 | 0.15 | [-0.17,  0.40] |  0.78 | 0.435  #> mined [no]  |     1.27 | 0.27 | [ 0.74,  1.80] |  4.72 | < .001 #>  #> # Zero-Inflated #>  #> Parameter   | Log-Odds |   SE |         95% CI |     z |      p #> --------------------------------------------------------------- #> (Intercept) |     0.79 | 0.27 | [ 0.26,  1.32] |  2.90 | 0.004  #> mined [no]  |    -1.84 | 0.31 | [-2.46, -1.23] | -5.87 | < .001   model2 <- lm(Sepal.Length ~ Species * bs(Petal.Width, degree = 2), data = iris) model_parameters(model2, effects = \"fixed\") #> Parameter                                       | Coefficient |    SE |          95% CI | t(141) |      p #> --------------------------------------------------------------------------------------------------------- #> (Intercept)                                     |        4.79 |  0.17 | [  4.45,  5.13] |  27.66 | < .001 #> Species [versicolor]                            |       -3.73 |  2.14 | [ -7.96,  0.50] |  -1.74 | 0.083  #> Species [virginica]                             |       -2.67 |  2.88 | [ -8.36,  3.03] |  -0.93 | 0.356  #> Petal Width [1st degree]                        |        2.53 |  2.36 | [ -2.13,  7.20] |   1.07 | 0.285  #> Petal Width [2nd degree]                        |      -11.18 | 21.14 | [-52.98, 30.62] |  -0.53 | 0.598  #> Species [versicolor] * Petal Width [1st degree] |        5.48 |  4.84 | [ -4.09, 15.05] |   1.13 | 0.260  #> Species [virginica] * Petal Width [1st degree]  |        2.37 |  4.35 | [ -6.22, 10.96] |   0.54 | 0.587  #> Species [versicolor] * Petal Width [2nd degree] |       14.84 | 21.16 | [-26.99, 56.68] |   0.70 | 0.484  #> Species [virginica] * Petal Width [2nd degree]  |       15.81 | 21.32 | [-26.35, 57.96] |   0.74 | 0.460   model3 <- lmer(   Reaction ~ Days + (1 | grp) + (1 | Subject),   data = sleepstudy )  model4 <- lm(QoL ~ time + age + education, data = qol_cancer)"},{"path":"/articles/parameters.html","id":"model-parameters","dir":"Articles","previous_headings":"","what":"Model Parameters","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation) plot()-method model_parameters() creates called “forest plot”. case models multiple components, parameters separated facets model component.  show_labels TRUE, coefficients confidence intervals added plot. Adjust text size size_text.  also works exponentiated coefficients.  also possible plot count-model component. done model_parameters() via component argument. easystats-functions, count-component generic name \"conditional\".  compared classical summary()-output, model_parameters(), hence plot()-method, tries create human readable, prettier parameters names.","code":"result <- model_parameters(model1, effects = \"fixed\")  plot(result) plot(result, show_labels = TRUE, size_text = 4) result <- model_parameters(model1, exponentiate = TRUE, effects = \"fixed\") plot(result, show_labels = TRUE, size_text = 4) result <- model_parameters(model1, exponentiate = TRUE, component = \"conditional\") plot(result) result <- model_parameters(model2)  plot(result)"},{"path":"/articles/parameters.html","id":"changing-parameter-names-in-the-plot","dir":"Articles","previous_headings":"Model Parameters","what":"Changing parameter names in the plot","title":"Plotting Functions for the 'parameters' Package","text":"default, model_parameters() returns data frame, parameter names found column Parameter. names used default generated plot:  However, several ways change names parameters. Since plot() returns ggplot objects, can easily modified, e.g. adding scale_y_discrete() layer.  Another way changing values Parameter column calling plot():","code":"plot(model_parameters(model4)) library(ggplot2) plot(model_parameters(model4)) +   scale_y_discrete(labels = c(\"Time\", \"Age\", \"Education (mid-level)\",                                \"Eucation (high-level)\")) mp <- model_parameters(model4) mp$Parameter <- c(\"(Intercept)\", \"Time\", \"Age\", \"Education (mid-level)\",                    \"Eucation (high-level)\") plot(mp)"},{"path":"/articles/parameters.html","id":"simulated-model-parameters","dir":"Articles","previous_headings":"","what":"Simulated Model Parameters","title":"Plotting Functions for the 'parameters' Package","text":"simulate_parameters() computes simulated draws parameters related indices Confidence Intervals (CI) p-values. Simulating parameter draws can seen (computationally faster) alternative bootstrapping. simulate_parameters() based simulate_model() thus simulates many draws parameter, plot() produce similar plots density estimation plots Bayesian models.   avoid vertical overlapping, use normalize_height.","code":"result <- simulate_parameters(model1)  plot(result) plot(result, stack = FALSE) plot(result, stack = FALSE, normalize_height = TRUE) plot(result, n_columns = 2) plot(result, n_columns = 2, stack = FALSE)"},{"path":"/articles/parameters.html","id":"model-parameters-of-sem-models","dir":"Articles","previous_headings":"","what":"Model Parameters of SEM models","title":"Plotting Functions for the 'parameters' Package","text":"","code":"structure <- \" visual  =~ x1 + x2 + x3                textual =~ x4 + x5 + x6                speed   =~ x7 + x8 + x9 \"  model <- lavaan::cfa(structure, data = HolzingerSwineford1939) result <- model_parameters(model) plot(result)"},{"path":"/articles/parameters.html","id":"model-parameters-of-bayesian-models","dir":"Articles","previous_headings":"","what":"Model Parameters of Bayesian models","title":"Plotting Functions for the 'parameters' Package","text":"model_parameters() Bayesian models produce “forest plots” (instead density estimations).","code":"# We download the model to save computation time. Here is the code # to refit the exact model used below...  # zinb <- read.csv(\"http://stats.idre.ucla.edu/stat/data/fish.csv\") # set.seed(123) # model <- brm(bf( #     count ~ persons + child + camper + (1 | persons), #     zi ~ child + camper + (1 | persons) #   ), #   data = zinb, #   family = zero_inflated_poisson() # ) brms_model <- insight::download_model(\"brms_zi_2\") result <- model_parameters(brms_model, effects = \"all\", component = \"all\")  plot(result)"},{"path":"/articles/parameters.html","id":"including-group-levels-of-random-effects","dir":"Articles","previous_headings":"Model Parameters of Bayesian models","what":"Including group levels of random effects","title":"Plotting Functions for the 'parameters' Package","text":"","code":"result <- model_parameters(brms_model,   effects = \"all\",   component = \"all\", group_level = TRUE ) plot(result)"},{"path":"/articles/parameters.html","id":"one-column-layout","dir":"Articles","previous_headings":"Model Parameters of Bayesian models","what":"One-column Layout","title":"Plotting Functions for the 'parameters' Package","text":"","code":"plot(result, n_column = 1)"},{"path":"/articles/parameters.html","id":"including-intercepts-and-variance-estimates-for-random-intercepts","dir":"Articles","previous_headings":"Model Parameters of Bayesian models","what":"Including Intercepts and Variance Estimates for Random Intercepts","title":"Plotting Functions for the 'parameters' Package","text":"","code":"plot(result, show_intercept = TRUE)"},{"path":"/articles/parameters.html","id":"model-parameters-of-meta-analysis-models","dir":"Articles","previous_headings":"","what":"Model Parameters of Meta-Analysis models","title":"Plotting Functions for the 'parameters' Package","text":"show_labels TRUE, estimates confidence intervals included plot. Adjust text size size_text.","code":"mydat <- data.frame(   effectsize = c(-0.393, 0.675, 0.282, -1.398),   standarderror = c(0.317, 0.317, 0.13, 0.36) )  ma <- rma(yi = effectsize, sei = standarderror, method = \"REML\", data = mydat) result <- model_parameters(ma)  result #> Meta-analysis using 'metafor' #>  #> Parameter | Coefficient |   SE |         95% CI |     z |      p | Weight #> ------------------------------------------------------------------------- #> Study 1   |       -0.39 | 0.32 | [-1.01,  0.23] | -1.24 | 0.215  |   9.95 #> Study 2   |        0.68 | 0.32 | [ 0.05,  1.30] |  2.13 | 0.033  |   9.95 #> Study 3   |        0.28 | 0.13 | [ 0.03,  0.54] |  2.17 | 0.030  |  59.17 #> Study 4   |       -1.40 | 0.36 | [-2.10, -0.69] | -3.88 | < .001 |   7.72 #> Overall   |       -0.18 | 0.44 | [-1.05,  0.68] | -0.42 | 0.676  | plot(result) plot(result, show_labels = TRUE, size_text = 4)"},{"path":"/articles/parameters.html","id":"funnel-plots","dir":"Articles","previous_headings":"Model Parameters of Meta-Analysis models","what":"Funnel plots","title":"Plotting Functions for the 'parameters' Package","text":"type = \"funnel\", funnel plot created.","code":"plot(result, type = \"funnel\")"},{"path":"/articles/parameters.html","id":"model-parameters-of-meta-analysis-models-with-subgroups","dir":"Articles","previous_headings":"Model Parameters of Meta-Analysis models","what":"Model Parameters of Meta-Analysis Models with Subgroups","title":"Plotting Functions for the 'parameters' Package","text":"","code":"set.seed(123) data(dat.bcg) dat <- escalc(   measure = \"RR\",   ai = tpos,   bi = tneg,   ci = cpos,   di = cneg,   data = dat.bcg ) dat$author <- make.unique(dat$author) dat$disease <- sample(c(\"Cancer\", \"CVD\", \"Depression\"), size = nrow(dat), replace = TRUE) model <- rma(yi, vi, mods = ~disease, data = dat, digits = 3, slab = author) result <- model_parameters(model)  result #> # Depression #>  #> Parameter            | Coefficient |   SE |         95% CI |     z |      p | Weight #> ------------------------------------------------------------------------------------ #> Aronson              |       -0.89 | 0.57 | [-2.01,  0.23] | -1.56 | 0.119  |   3.07 #> Ferguson & Simes     |       -1.59 | 0.44 | [-2.45, -0.72] | -3.59 | < .001 |   5.14 #> Rosenthal et al      |       -1.35 | 0.64 | [-2.61, -0.08] | -2.09 | 0.036  |   2.41 #> Frimodt-Moller et al |       -0.22 | 0.23 | [-0.66,  0.23] | -0.96 | 0.336  |  19.53 #> Coetzee & Berjak     |       -0.47 | 0.24 | [-0.94,  0.00] | -1.98 | 0.048  |  17.72 #> Overall              |       -0.12 | 0.59 | [-1.28,  1.04] | -0.20 | 0.841  |        #>  #> # CVD #>  #> Parameter          | Coefficient |   SE |         95% CI |      z |      p | Weight #> ----------------------------------------------------------------------------------- #> Hart & Sutherland  |       -1.44 | 0.14 | [-1.72, -1.16] | -10.19 | < .001 |  49.97 #> Stein & Aronson    |       -0.79 | 0.08 | [-0.95, -0.62] |  -9.46 | < .001 | 144.81 #> Vandiviere et al   |       -1.62 | 0.47 | [-2.55, -0.70] |  -3.43 | < .001 |   4.48 #> TPT Madras         |        0.01 | 0.06 | [-0.11,  0.14] |   0.19 | 0.849  | 252.42 #> Comstock et al     |       -0.34 | 0.11 | [-0.56, -0.12] |  -3.05 | 0.002  |  80.57 #> Comstock & Webster |        0.45 | 0.73 | [-0.98,  1.88] |   0.61 | 0.541  |   1.88 #> Overall            |        0.03 | 0.56 | [-1.08,  1.13] |   0.05 | 0.963  |        #>  #> # Cancer #>  #> Parameter         | Coefficient |   SE |         95% CI |     z |      p | Weight #> --------------------------------------------------------------------------------- #> Rosenthal et al.1 |       -1.37 | 0.27 | [-1.90, -0.84] | -5.07 | < .001 |  13.69 #> Comstock et al.1  |       -0.02 | 0.27 | [-0.54,  0.51] | -0.06 | 0.948  |  14.00 #> Overall           |       -0.69 | 0.49 | [-1.65,  0.26] | -1.42 | 0.155  | plot(result)"},{"path":"/articles/parameters.html","id":"bayesian-meta-analysis-using-brms","dir":"Articles","previous_headings":"","what":"Bayesian Meta-Analysis using brms","title":"Plotting Functions for the 'parameters' Package","text":"","code":"# We download the model to save computation time. Here is the code # to refit the exact model used below...  # Data from # https://github.com/MathiasHarrer/Doing-Meta-Analysis-in-R/blob/master/_data/Meta_Analysis_Data.RData # set.seed(123) # priors <- c(prior(normal(0,1), class = Intercept), #             prior(cauchy(0,0.5), class = sd)) # # model <-  #    brm(TE|se(seTE) ~ 1 + (1|Author), #    data = Meta_Analysis_Data, #    prior = priors, #    iter = 4000) library(brms) model <- insight::download_model(\"brms_meta_1\") result <- model_parameters(model)  result plot(result)"},{"path":"/articles/parameters.html","id":"comparison-of-models","dir":"Articles","previous_headings":"","what":"Comparison of Models","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":"data(iris) # shorter variable name iris$Length <- iris$Petal.Length lm1 <- lm(Sepal.Length ~ Species, data = iris) lm2 <- lm(Sepal.Length ~ Species + Length, data = iris) lm3 <- lm(Sepal.Length ~ Species * Length, data = iris)  result <- compare_parameters(lm1, lm2, lm3) plot(result) plot(result, size_text = 3.8) +   labs(y = NULL) +   theme(legend.position = \"bottom\")"},{"path":"/articles/parameters.html","id":"equivalence-testing","dir":"Articles","previous_headings":"","what":"Equivalence Testing","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":""},{"path":"/articles/parameters.html","id":"for-fixed-effects","dir":"Articles","previous_headings":"Equivalence Testing","what":"For fixed effects","title":"Plotting Functions for the 'parameters' Package","text":"","code":"# default rules, like in bayestestR::equivalence_test() result <- equivalence_test(model4) result #> # TOST-test for Practical Equivalence #>  #>   ROPE: [-1.99 1.99] #>  #> Parameter        |         90% CI | % in ROPE |        H0 |      p #> ------------------------------------------------------------------ #> (Intercept)      | [59.33, 68.41] |        0% |  Rejected | > .999 #> time             | [-0.76,  2.53] |    83.52% | Undecided | 0.137  #> age              | [-0.26,  0.32] |      100% |  Accepted | < .001 #> education [mid]  | [ 5.13, 12.39] |        0% |  Rejected | 0.999  #> education [high] | [10.14, 18.57] |        0% |  Rejected | > .999  plot(result) result <- equivalence_test(model4, rule = \"cet\") result #> # Conditional Equivalence Testing #>  #>   ROPE: [-1.99 1.99] #>  #> Parameter        |         90% CI | % in ROPE |        H0 |      p #> ------------------------------------------------------------------ #> (Intercept)      | [59.33, 68.41] |        0% |  Rejected | > .999 #> time             | [-0.76,  2.53] |    83.52% | Undecided | 0.137  #> age              | [-0.26,  0.32] |      100% |  Accepted | < .001 #> education [mid]  | [ 5.13, 12.39] |        0% |  Rejected | 0.999  #> education [high] | [10.14, 18.57] |        0% |  Rejected | > .999  plot(result)"},{"path":"/articles/parameters.html","id":"for-random-effects","dir":"Articles","previous_headings":"Equivalence Testing","what":"For random effects","title":"Plotting Functions for the 'parameters' Package","text":"","code":"result <- equivalence_test(model3, effects = \"random\") result #> # TOST-test for Practical Equivalence #>  #>   ROPE: [-5.63 5.63] #>  #> Group: grp #>  #> Parameter | Estimate | Group |           90% CI | % in ROPE |       H0 #> ---------------------------------------------------------------------- #> 1         |     1.18 |   grp | [ -1.91,   4.28] |      100% | Accepted #> 2         |    -0.21 |   grp | [ -3.27,   2.84] |      100% | Accepted #> 3         |    -0.25 |   grp | [ -3.33,   2.83] |      100% | Accepted #> 4         |    -0.48 |   grp | [ -3.56,   2.60] |      100% | Accepted #> 5         |    -0.24 |   grp | [ -3.33,   2.85] |      100% | Accepted #> Group: Subject #>  #> Parameter | Estimate |   Group |           90% CI | % in ROPE |        H0 #> ------------------------------------------------------------------------- #> 308       |    40.86 | Subject | [ 25.22,  56.50] |        0% |  Rejected #> 309       |   -77.88 | Subject | [-93.51, -62.24] |        0% |  Rejected #> 310       |   -63.28 | Subject | [-78.91, -47.65] |        0% |  Rejected #> 330       |     4.32 | Subject | [-11.32,  19.96] |    36.01% | Undecided #> 331       |    10.18 | Subject | [ -5.45,  25.80] |    35.46% | Undecided #> 332       |     8.47 | Subject | [ -7.17,  24.10] |    36.02% | Undecided #> 333       |    16.44 | Subject | [  0.81,  32.07] |    15.44% |  Rejected #> 334       |    -3.00 | Subject | [-18.65,  12.65] |    36.00% | Undecided #> 335       |   -45.48 | Subject | [-61.11, -29.85] |        0% |  Rejected #> 337       |    72.16 | Subject | [ 56.54,  87.79] |        0% |  Rejected #> 349       |   -20.91 | Subject | [-36.57,  -5.25] |     1.22% |  Rejected #> 350       |    14.23 | Subject | [ -1.41,  29.88] |    22.52% | Undecided #> 351       |    -8.07 | Subject | [-23.74,   7.59] |    35.97% | Undecided #> 352       |    36.44 | Subject | [ 20.76,  52.12] |        0% |  Rejected #> 369       |     6.97 | Subject | [ -8.66,  22.60] |    36.05% | Undecided #> 370       |    -6.31 | Subject | [-21.96,   9.34] |    35.99% | Undecided #> 371       |    -3.34 | Subject | [-18.96,  12.29] |    36.05% | Undecided #> 372       |    18.21 | Subject | [  2.57,  33.84] |     9.80% |  Rejected  plot(result)"},{"path":"/articles/parameters.html","id":"from-simulated-model-parameters","dir":"Articles","previous_headings":"Equivalence Testing","what":"From simulated model parameters","title":"Plotting Functions for the 'parameters' Package","text":"","code":"simulated_parameters <- simulate_model(model1, component = \"conditional\") result <- equivalence_test(simulated_parameters) result #> # Test for Practical Equivalence #>  #>   ROPE: [-0.10 0.10] #>  #> Parameter   |        H0 | inside ROPE |       95% HDI #> ----------------------------------------------------- #> (Intercept) | Undecided |     11.99 % | [-0.86  0.24] #> sppPR       |  Rejected |      0.00 % | [-1.74 -0.84] #> sppDM       | Undecided |     10.30 % | [-0.00  0.52] #> sppEC-A     |  Rejected |      0.00 % | [-0.96 -0.19] #> sppEC-L     |  Rejected |      0.00 % | [ 0.41  0.90] #> sppDES-L    |  Rejected |      0.00 % | [ 0.40  0.89] #> sppDF       | Undecided |     38.80 % | [-0.15  0.38] #> minedno     |  Rejected |      0.00 % | [ 0.72  1.81]  plot(result)"},{"path":"/articles/parameters.html","id":"principal-component-analysis","dir":"Articles","previous_headings":"","what":"Principal Component Analysis","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":"data(mtcars) result <- principal_components(mtcars[, 1:7], n = \"all\", threshold = 0.2) result #> # Loadings from Principal Component Analysis (no rotation) #>  #> Variable |  PC1  |  PC2  | PC3  |  PC4  | PC5  |  PC6  | Complexity #> ------------------------------------------------------------------- #> mpg      | -0.93 |       |      | -0.30 |      |       |    1.30    #> cyl      | 0.96  |       |      |       |      | -0.21 |    1.18    #> disp     | 0.95  |       |      | -0.23 |      |       |    1.16    #> hp       | 0.87  | 0.36  |      |       | 0.30 |       |    1.64    #> drat     | -0.75 | 0.48  | 0.44 |       |      |       |    2.47    #> wt       | 0.88  | -0.35 | 0.26 |       |      |       |    1.54    #> qsec     | -0.54 | -0.81 |      |       |      |       |    1.96    #>  #> The 6 principal components accounted for 99.30% of the total variance of the original data (PC1 = 72.66%, PC2 = 16.52%, PC3 = 4.93%, PC4 = 2.26%, PC5 = 1.85%, PC6 = 1.08%).  plot(result) result <- principal_components(   mtcars[, 1:7],   n = 3,   rotation = \"varimax\",   threshold = \"max\",   sort = TRUE )  result #> # Rotated loadings from Principal Component Analysis (varimax-rotation) #>  #> Variable |  RC1  |  RC2  |  RC3  | Complexity | Uniqueness | MSA  #> ----------------------------------------------------------------- #> wt       | 0.91  |       |       |    1.31    |    0.03    | 0.77 #> mpg      | -0.82 |       |       |    1.70    |    0.11    | 0.87 #> disp     | 0.79  |       |       |    1.95    |    0.08    | 0.85 #> cyl      | 0.64  |       |       |    2.84    |    0.06    | 0.87 #> qsec     |       | -0.98 |       |    1.02    |    0.03    | 0.61 #> hp       |       | 0.69  |       |    2.09    |    0.09    | 0.90 #> drat     |       |       | -0.90 |    1.43    |    0.01    | 0.85 #>  #> The 3 principal components (varimax rotation) accounted for 94.11% of the total variance of the original data (RC1 = 45.02%, RC2 = 27.79%, RC3 = 21.30%).  plot(result, type = \"line\", text_color = \"white\") +   theme_abyss()"},{"path":"/articles/parameters.html","id":"cluster-analysis","dir":"Articles","previous_headings":"","what":"Cluster Analysis","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":""},{"path":"/articles/parameters.html","id":"clustering-solution","dir":"Articles","previous_headings":"Cluster Analysis","what":"Clustering solution","title":"Plotting Functions for the 'parameters' Package","text":"","code":"data(iris) result <- cluster_analysis(iris[, 1:4], n = 3) result #> # Clustering Solution #>  #> The 3 clusters accounted for 76.70% of the total variance of the original data. #>  #> Cluster | n_Obs | Sum_Squares | Sepal.Length | Sepal.Width | Petal.Length | Petal.Width #> --------------------------------------------------------------------------------------- #> 1       |    47 |       47.45 |         1.13 |        0.09 |         0.99 |        1.01 #> 2       |    50 |       47.35 |        -1.01 |        0.85 |        -1.30 |       -1.25 #> 3       |    53 |       44.09 |        -0.05 |       -0.88 |         0.35 |        0.28 #>  #> # Indices of model performance #>  #> Sum_Squares_Total | Sum_Squares_Between | Sum_Squares_Within |    R2 #> -------------------------------------------------------------------- #> 596.000           |             457.112 |            138.888 | 0.767 #>  #> # You can access the predicted clusters via 'predict()'. plot(result) result <- cluster_analysis(iris[, 1:4], n = 4) plot(result)"},{"path":"/articles/parameters.html","id":"cluster-centers","dir":"Articles","previous_headings":"Cluster Analysis","what":"Cluster centers","title":"Plotting Functions for the 'parameters' Package","text":"","code":"s <- summary(result) s #>   Cluster Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1       1  -0.05005221 -0.88042696    0.3465767   0.2805873 #> 2       2   1.13217737  0.08812645    0.9928284   1.0141287 #> 3       3  -0.62595645  1.80426129   -1.2826445  -1.2290567 #> 4       4  -1.19247841  0.40154427   -1.3090939  -1.2608902  plot(s)"},{"path":"/articles/parameters.html","id":"number-of-componentsfactors-to-retain","dir":"Articles","previous_headings":"","what":"Number of Components/Factors to Retain","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":"data(mtcars) result <- n_factors(mtcars, type = \"PCA\") result #> # Method Agreement Procedure: #>  #> The choice of 3 dimensions is supported by 5 (29.41%) methods out of 17 (Bartlett, CNG, Scree (SE), Scree (R2), Velicer's MAP).  plot(result) plot(result, type = \"line\")"},{"path":"/articles/parameters.html","id":"number-of-clusters-to-retain","dir":"Articles","previous_headings":"","what":"Number of Clusters to Retain","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":"data(iris) result <- n_clusters(standardize(iris[, 1:4])) result #> # Method Agreement Procedure: #>  #> The choice of 2 clusters is supported by 15 (53.57%) methods out of 28 (Elbow, Silhouette, Gap_Maechler2012, Gap_Dudoit2002, Ch, DB, Duda, Pseudot2, Beale, Ratkowsky, PtBiserial, Mcclain, Dunn, SDindex, Mixture).  plot(result) plot(result, type = \"line\")"},{"path":"/articles/parameters.html","id":"description-of-variable-distributions","dir":"Articles","previous_headings":"","what":"Description of Variable Distributions","title":"Plotting Functions for the 'parameters' Package","text":"(related function documentation)","code":""},{"path":"/articles/parameters.html","id":"histogram-for-numbers-with-fractional-part","dir":"Articles","previous_headings":"Description of Variable Distributions","what":"Histogram for Numbers with Fractional Part","title":"Plotting Functions for the 'parameters' Package","text":"","code":"data(iris) result <- describe_distribution(iris$Sepal.Length) result #> Mean |   SD |  IQR |        Range | Skewness | Kurtosis |   n | n_Missing #> ------------------------------------------------------------------------- #> 5.84 | 0.83 | 1.30 | [4.30, 7.90] |     0.31 |    -0.55 | 150 |         0  plot(result)"},{"path":"/articles/parameters.html","id":"add-range-of-dispersion-sd-or-mad","dir":"Articles","previous_headings":"Description of Variable Distributions","what":"Add Range of Dispersion (SD or MAD)","title":"Plotting Functions for the 'parameters' Package","text":"","code":"plot(result, dispersion = TRUE)"},{"path":"/articles/parameters.html","id":"thin-bars-for-integer-values","dir":"Articles","previous_headings":"Description of Variable Distributions","what":"Thin Bars for Integer Values","title":"Plotting Functions for the 'parameters' Package","text":"","code":"set.seed(333) x <- sample(1:100, 1000, replace = TRUE) result <- describe_distribution(x) result #>  Mean |    SD |   IQR |          Range | Skewness | Kurtosis |    n | n_Missing #> ------------------------------------------------------------------------------- #> 50.18 | 28.66 | 48.75 | [1.00, 100.00] |     0.02 |    -1.16 | 1000 |         0  plot(result)"},{"path":"/articles/parameters.html","id":"use-a-normal-curve-instead-of-ribbon","dir":"Articles","previous_headings":"Description of Variable Distributions","what":"Use a Normal Curve instead of Ribbon","title":"Plotting Functions for the 'parameters' Package","text":"","code":"plot(result, dispersion = TRUE, dispersion_style = \"curve\")"},{"path":"/articles/parameters.html","id":"highlighting-categories","dir":"Articles","previous_headings":"Description of Variable Distributions","what":"Highlighting Categories","title":"Plotting Functions for the 'parameters' Package","text":"","code":"set.seed(123) result <- describe_distribution(sample(LETTERS[1:10], 1000, TRUE))  # highlight one category plot(result, highlight = \"D\") # highlight multiple categories plot(result, highlight = c(\"D\", \"H\"), size_bar = .4) # own color scales - pass a named vector to 'scale_fill_manual()' # the name of the non-highlighted color is \"no_highlight\". plot(result, highlight = c(\"D\", \"H\", \"A\"), size_bar = .4) +   scale_fill_manual(values = c(D = \"red\", H = \"green\", A = \"gold\", no_highlight = \"steelblue\"))"},{"path":"/articles/performance.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Plotting Functions for the 'performance' Package","text":"crucial aspect building regression models evaluate quality modelfit. important investigate well models fit data fit indices report. Functions create diagnostic plots compute fit measures exist, however, mostly spread different packages. unique consistent approach assess model quality different kind models. primary goal performance package easystats ecosystem fill gap provide utilities computing indices model quality goodness fit. include measures like r-squared (R2), root mean squared error (RMSE) intraclass correlation coefficient (ICC) , also functions check (mixed) models overdispersion, zero-inflation, convergence singularity. , see: https://easystats.github.io/performance/","code":""},{"path":"/articles/performance.html","id":"checking-model-assumptions","dir":"Articles","previous_headings":"","what":"Checking Model Assumptions","title":"Plotting Functions for the 'performance' Package","text":"Let’s load needed libraries first:","code":"library(performance) library(lme4) library(see)"},{"path":"/articles/performance.html","id":"binned-residuals","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Binned Residuals","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation) Example model good fit.  Example model good fit.","code":"model <- glm(vs ~ wt + mpg, data = mtcars, family = \"binomial\") result <- binned_residuals(model) result #> Warning: Probably bad model fit. Only about 50% of the residuals are inside the error bounds.  plot(result) model <- glm(am ~ mpg + vs + cyl, data = mtcars, family = \"binomial\") result <- binned_residuals(model) result #> Ok: About 100% of the residuals are inside the error bounds.  plot(result)"},{"path":"/articles/performance.html","id":"check-for-multicollinearity---variance-inflation-factor","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Multicollinearity - Variance Inflation Factor","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"m <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_collinearity(m)  result #> # Check for Multicollinearity #>  #> Low Correlation #>  #>  Term  VIF Increased SE Tolerance #>  gear 1.53         1.24      0.65 #>  #> Moderate Correlation #>  #>  Term  VIF Increased SE Tolerance #>    wt 5.05         2.25      0.20 #>   cyl 5.41         2.33      0.18 #>  disp 9.97         3.16      0.10 plot(result) library(glmmTMB) data(Salamanders)  # create highly correlated pseudo-variable set.seed(1) Salamanders$cover2 <-   Salamanders$cover * runif(n = nrow(Salamanders), min = .7, max = 1.5)  # fit mixed model with zero-inflation model <- glmmTMB(   count ~ spp + mined + cover + cover2 + (1 | site),   ziformula = ~ spp + mined,   family = truncated_poisson,   data = Salamanders )  result <- check_collinearity(model)  result #> # Check for Multicollinearity #>  #> * conditional component: #>  #> Low Correlation #>  #>   Term  VIF Increased SE Tolerance #>    spp 1.07         1.04      0.93 #>  mined 1.17         1.08      0.85 #>  #> High Correlation #>  #>    Term   VIF Increased SE Tolerance #>   cover 13.45         3.67      0.07 #>  cover2 13.28         3.64      0.08 #>  #> * zero inflated component: #>  #> Low Correlation #>  #>   Term  VIF Increased SE Tolerance #>    spp 1.08         1.04      0.93 #>  mined 1.08         1.04      0.93 plot(result)"},{"path":"/articles/performance.html","id":"check-for-outliers","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Outliers","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation) two visualization options","code":"# select only mpg and disp (continuous) mt1 <- mtcars[, c(1, 3, 4)] # create some fake outliers and attach outliers to main df mt2 <- rbind(mt1, data.frame(mpg = c(37, 40), disp = c(300, 400), hp = c(110, 120))) # fit model with outliers model <- lm(disp ~ mpg + hp, data = mt2) result <- check_outliers(model)  result #> Warning: 2 outliers detected (cases 31, 34)."},{"path":"/articles/performance.html","id":"dot-plot-with-contour-lines","dir":"Articles","previous_headings":"Checking Model Assumptions > Check for Outliers","what":"dot-plot with contour lines","title":"Plotting Functions for the 'performance' Package","text":"","code":"plot(result, type = \"dots\")"},{"path":"/articles/performance.html","id":"bars-indicating-influential-observations","dir":"Articles","previous_headings":"Checking Model Assumptions > Check for Outliers","what":"bars indicating influential observations","title":"Plotting Functions for the 'performance' Package","text":"","code":"plot(result, type = \"bars\")"},{"path":"/articles/performance.html","id":"check-for-normal-distributed-residuals","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Normal Distributed Residuals","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"model <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_normality(model) #> OK: residuals appear as normally distributed (p = 0.230)."},{"path":"/articles/performance.html","id":"density-plot","dir":"Articles","previous_headings":"Checking Model Assumptions > Check for Normal Distributed Residuals","what":"Density Plot","title":"Plotting Functions for the 'performance' Package","text":"","code":"plot(result)"},{"path":"/articles/performance.html","id":"qq-plot","dir":"Articles","previous_headings":"Checking Model Assumptions > Check for Normal Distributed Residuals","what":"QQ Plot","title":"Plotting Functions for the 'performance' Package","text":"","code":"plot(result, type = \"qq\")"},{"path":"/articles/performance.html","id":"pp-plot","dir":"Articles","previous_headings":"Checking Model Assumptions > Check for Normal Distributed Residuals","what":"PP Plot","title":"Plotting Functions for the 'performance' Package","text":"","code":"plot(result, type = \"pp\")"},{"path":"/articles/performance.html","id":"check-for-normal-distributed-random-effects","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Normal Distributed Random Effects","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"model <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy) result <- check_normality(model, effects = \"random\") #> Group: Subject #> (Intercept) OK: random effects appear as normally distributed (p = 0.428). #>        Days OK: random effects appear as normally distributed (p = 0.898). plot(result) #> [[1]]"},{"path":"/articles/performance.html","id":"check-for-heteroscedasticity","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Heteroscedasticity","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"model <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_heteroscedasticity(model) #> Warning: Heteroscedasticity (non-constant error variance) detected (p = 0.042). plot(result)"},{"path":"/articles/performance.html","id":"check-for-homogeneity","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Check for Homogeneity","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"model <- lm(len ~ supp + dose, data = ToothGrowth) result <- check_homogeneity(model) #> OK: There is not clear evidence for different variances across groups (Bartlett Test, p = 0.226). plot(result)"},{"path":"/articles/performance.html","id":"posterior-predictive-checks","dir":"Articles","previous_headings":"Checking Model Assumptions","what":"Posterior Predictive Checks","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)  check model properly captures variation data, use check_range = TRUE:","code":"model <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) check_posterior_predictions(model) model <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) check_posterior_predictions(model, check_range = TRUE)"},{"path":"/articles/performance.html","id":"overall-model-check","dir":"Articles","previous_headings":"","what":"Overall Model Check","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation) composition plots checking model assumptions depends type input model. E.g., logistic regression models, binned residuals plot used, linear models plot homegeneity variance shown instead.","code":""},{"path":"/articles/performance.html","id":"checks-for-generalized-linear-models","dir":"Articles","previous_headings":"Overall Model Check","what":"Checks for generalized linear models","title":"Plotting Functions for the 'performance' Package","text":"","code":"model <- glm(am ~ mpg + vs + cyl, data = mtcars, family = \"binomial\") check_model(model)"},{"path":"/articles/performance.html","id":"checks-for-linear-mixed-models","dir":"Articles","previous_headings":"Overall Model Check","what":"Checks for linear (mixed) models","title":"Plotting Functions for the 'performance' Package","text":"Note checks supported performance reported unified visual check. example, linear models, one needs check assumption errors autocorrelated, check shown visual check.","code":"model <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy) check_model(model) check_model(model, panel = FALSE) #> $NCV #>  #> $HOMOGENEITY #>  #> $OUTLIERS #>  #> $QQ #>  #> $PP_CHECK #>  #> [[6]] check_autocorrelation(lm(formula = wt ~ mpg, data = mtcars)) #> Warning: Autocorrelated residuals detected (p < .001)."},{"path":"/articles/performance.html","id":"compare-model-performances","dir":"Articles","previous_headings":"","what":"Compare Model Performances","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation) compare_performance() computes indices model performance different models hence allows comparison indices across models. plot()-method creates “spiderweb” plot, different indices normalized larger values indicate better model performance. Hence, points closer center indicate worse fit indices.","code":"data(iris) lm1 <- lm(Sepal.Length ~ Species, data = iris) lm2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris) lm3 <- lm(Sepal.Length ~ Species * Sepal.Width, data = iris) lm4 <- lm(Sepal.Length ~ Species * Sepal.Width + Petal.Length + Petal.Width, data = iris) result <- compare_performance(lm1, lm2, lm3, lm4)  result #> # Comparison of Model Performance Indices #>  #> Name | Model |     AIC | AIC weights |     BIC | BIC weights |    R2 | R2 (adj.) |  RMSE | Sigma #> ------------------------------------------------------------------------------------------------ #> lm1  |    lm | 231.452 |     < 0.001 | 243.494 |     < 0.001 | 0.619 |     0.614 | 0.510 | 0.515 #> lm2  |    lm | 106.233 |     < 0.001 | 121.286 |     < 0.001 | 0.837 |     0.833 | 0.333 | 0.338 #> lm3  |    lm | 187.092 |     < 0.001 | 208.167 |     < 0.001 | 0.727 |     0.718 | 0.431 | 0.440 #> lm4  |    lm |  78.797 |       1.000 | 105.892 |       1.000 | 0.871 |     0.865 | 0.296 | 0.305  plot(result)"},{"path":"/articles/performance.html","id":"model-and-vector-properties","dir":"Articles","previous_headings":"","what":"Model and Vector Properties","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)","code":"model <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy) result <- check_distribution(model)  result #> # Distribution of Model Family #>  #> Predicted Distribution of Residuals #>  #>  Distribution Probability #>        normal         91% #>   exponential          6% #>     lognormal          3% #>  #> Predicted Distribution of Response #>  #>  Distribution Probability #>     lognormal         81% #>         gamma         12% #>           chi          3% plot(result) vec <- bayestestR::distribution_poisson(n = 500, lambda = 2.5) result <- check_distribution(vec)  result #> # Predicted Distribution of Vector #>  #>       Distribution Probability #>            poisson         72% #>  negative binomial         25% #>           binomial          3% plot(result)"},{"path":"/articles/performance.html","id":"roc-curves","dir":"Articles","previous_headings":"","what":"ROC curves","title":"Plotting Functions for the 'performance' Package","text":"(related function documentation)  can also compare ROC curves different models.","code":"if (packageVersion(\"performance\") > \"0.7.0\") {   data(iris)   set.seed(123)   iris$y <- rbinom(nrow(iris), size = 1, .3)    folds <- sample(nrow(iris), size = nrow(iris) / 8, replace = FALSE)   test_data <- iris[folds, ]   train_data <- iris[-folds, ]    model <- glm(y ~ Sepal.Length + Sepal.Width, data = train_data, family = \"binomial\")   result <- performance_roc(model, new_data = test_data)    result   plot(result) } if (packageVersion(\"performance\") > \"0.7.0\") {   set.seed(123)   library(bayestestR)    # creating models   m1 <- glm(vs ~ wt + mpg, data = mtcars, family = \"binomial\")   m2 <- glm(vs ~ wt + am + mpg, data = mtcars, family = \"binomial\")    # comparing their performances using the AUC curve   plot(performance_roc(m1, m2)) }"},{"path":"/articles/seecolorscales.html","id":"the-see-color-scales","dir":"Articles","previous_headings":"","what":"The see Color Scales","title":"Color Scales","text":"several different color scales available see package, pre-defined palettes like \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\", \"light\" - exceptions pizza color scale bluebrown color scale. vignettes, show default palettes different color scales give impression scales work different type data.","code":""},{"path":"/articles/seecolorscales.html","id":"social-colors---three-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_social()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"social-colors---four-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_social()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"social-colors---five-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_social()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"material-colors---three-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_material()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"material-colors---four-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_material()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"material-colors---five-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_material()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"flat-colors---three-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_flat()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"flat-colors---four-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_flat()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"flat-colors---five-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_flat()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"metro-colors---three-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_metro()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"metro-colors---four-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_metro()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"metro-colors---five-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_metro()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"see-colors---three-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_see()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"see-colors---four-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_see()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"see-colors---five-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_see()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"pizza-colors---three-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"pizza-colors---four-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"pizza-colors---five-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales.html","id":"bluebrown-colors---three-groups","dir":"Articles","previous_headings":"Bluebrown Colors","what":"Bluebrown Colors - Three Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_bluebrown()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_bluebrown()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"bluebrown-colors---four-groups","dir":"Articles","previous_headings":"Bluebrown Colors","what":"Bluebrown Colors - Four Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_bluebrown()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_bluebrown()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales.html","id":"bluebrown-colors---five-groups","dir":"Articles","previous_headings":"Bluebrown Colors","what":"Bluebrown Colors - Five Groups","title":"Color Scales","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_bluebrown()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_bluebrown()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"the-see-color-scales","dir":"Articles","previous_headings":"","what":"The see Color Scales","title":"Color Scales for Dark Themes","text":"several different color scales available see package, pre-defined palettes like \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\", \"light\" - exceptions pizza color scale bluebrown color scale. vignettes, show \"light\" palettes different color scales give impression scales work different type data, especially dark themes.","code":""},{"path":"/articles/seecolorscales_dark.html","id":"social-colors---three-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_social(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"social-colors---four-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_social(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"social-colors---five-groups","dir":"Articles","previous_headings":"The see Color Scales","what":"Social Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_social(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_social(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"material-colors---three-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_material(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"material-colors---four-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_material(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"material-colors---five-groups","dir":"Articles","previous_headings":"Material Colors","what":"Material Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_material(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_material(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"flat-colors---three-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_flat(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"flat-colors---four-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_flat(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"flat-colors---five-groups","dir":"Articles","previous_headings":"Flat Colors","what":"Flat Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_flat(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_flat(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"metro-colors---three-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_metro(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"metro-colors---four-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_metro(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"metro-colors---five-groups","dir":"Articles","previous_headings":"Metro Colors","what":"Metro Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_metro(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_metro(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"see-colors---three-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_see(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"see-colors---four-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_see(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"see-colors---five-groups","dir":"Articles","previous_headings":"See Colors","what":"See Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_see(palette = \"light\")  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_see(palette = \"light\")  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/articles/seecolorscales_dark.html","id":"pizza-colors---three-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Three Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d1, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = Species)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"pizza-colors---four-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Four Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d2, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group4)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":"/articles/seecolorscales_dark.html","id":"pizza-colors---five-groups","dir":"Articles","previous_headings":"Pizza Colors","what":"Pizza Colors - Five Groups","title":"Color Scales for Dark Themes","text":"","code":"p1 <- ggplot(d3, aes(x, y, colour = group)) +   geom_line(size = 1) +   scale_color_pizza()  p2 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, colour = group5)) +   geom_point2(size = 2.5) +   scale_color_pizza()  plots(p1, p2, n_rows = 1)"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Lüdecke. Author, maintainer.            @strengejacke Dominique Makowski. Author, inventor.            @Dom_Makowski Indrajeet Patil. Author, contributor.            @patilindrajeets Mattan S. Ben-Shachar. Author, contributor.            @mattansb Brenton M. Wiernik. Author, contributor. Philip Waggoner. Author, contributor. Jeffrey R. Stevens. Contributor. Matthew Smith. Reviewer.            @SmithMatt90 Jakob Bossek. Reviewer.            @BossekJakob","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lüdecke et al., (2021). see: R Package Visualizing Statistical Models. Journal Open Source Software,   6(64), 3393. https://doi.org/10.21105/joss.03393","code":"@Article{,   title = {{see}: An {R} Package for Visualizing Statistical Models},   author = {Daniel Lüdecke and Indrajeet Patil and Mattan S. Ben-Shachar and Brenton M. Wiernik and Philip Waggoner and Dominique Makowski},   journal = {Journal of Open Source Software},   year = {2021},   volume = {6},   number = {64},   pages = {3393},   doi = {10.21105/joss.03393}, }"},{"path":"/index.html","id":"see-","dir":"","previous_headings":"","what":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"“Damned believe without seeing” easystats collection packages operate synergy provide consistent intuitive syntax working statistical models R programming language (R Core Team, 2021). easystats packages return comprehensive numeric summaries model parameters performance. see package complements numeric summaries host functions tools produce range publication-ready visualizations model parameters, predictions, performance diagnostics. core pillar easystats, see package helps users utilize visualization informative, communicable, well-rounded scientific reporting.","code":""},{"path":"/index.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of Need","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"grammar graphics (Wilkinson, 2012), largely due implementation ggplot2 package (Wickham, 2016), become dominant approach visualization R. Building model visualization ggplot2 somewhat disconnected model fitting evaluation process. Generally, process entails: Fitting model. Extracting desired results model (e.g., model parameters intervals, model predictions, diagnostic statistics) arranging dataframe. Passing results dataframe ggplot() specifying graphical parameters. example: number packages developed extend ggplot2 assist model visualization (sampling packages, visit ggplot2-gallery). packages provide functions additional geoms, annotations, common visualization types without linking specific statistical analysis fundamentally changing ggplot2 workflow (e.g., ggrepel, ggalluvial, ggridges, ggdist, ggpubr, etc.). ggplot2 extensions provide functions generate publication-ready visualizations specific types models (e.g., metaviz, tidymv, sjPlot, survminer). example, ggstatsplot package (Patil, 2021) offers visualizations statistical analysis one-way factorial designs, plotmm package (Waggoner, 2020) supports specific types mixture model objects. aim see package produce visualizations wide variety models statistical analyses way tightly linked model fitting process requires minimal interruption users’ workflow. see accomplishes aim providing single plot() method objects created easystats packages, parameters tables, modelbased predictions, performance diagnostic tests, correlation matrices, . easystats packages compute numeric results wide range statistical models, see package acts visual support entire easystats ecosystem. , visualizations corresponding stages statistical analysis, model fitting diagnostics reporting, can easily created using see. see plots compatible ggplot2 functions customization (e.g., labs() plot title). addition, see provides several aesthetic utilities embellish easystats plots ggplot2 plots. result package minimizes barrier producing high-quality statistical visualizations R. central goal easystats make task statistics R easy possible. goal realized intuitive consistent syntax, consistent transparent argument names, comprehensive documentation, informative warnings error messages, smart functions sensible default parameter values. see package follows philosophy using single access point—generic plot() method—visualization manner statistical results supported easystats.","code":"library(ggplot2)  # step-1 model <- lm(mpg ~ factor(cyl) * wt, data = mtcars)  # step-2 results <- fortify(model)  # step-3 ggplot(results) +   geom_point(aes(x = wt, y = mpg, color = factor(cyl))) +   geom_line(aes(x = wt, y = .fitted, color = `factor(cyl)`))"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"see package available CRAN, latest development version available R-universe (rOpenSci). downloaded package, can load using: package provides visualisation toolbox R packages easystats ecosystem. note download easystats packages . Rather, loaded respective plotting method requested easystats package.","code":"library(\"see\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"Following resources good way get know functionality offered package:","code":""},{"path":"/index.html","id":"plotting-functions-for-easystats-packages","dir":"","previous_headings":"","what":"Plotting functions for ‘easystats’ packages","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"present one two plotting methods easystats package, many methods available. Interested readers encouraged explore range examples package website.","code":""},{"path":"/index.html","id":"parameters","dir":"","previous_headings":"","what":"parameters","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"parameters package converts summaries regression model objects dataframes (Lüdecke et al., 2020). see package can take transformed object , example, create dot--whisker plot extracted regression estimates simply passing parameters class object plot().  see outputs objects class ggplot, ggplot2 functions can added layers plot ggplot2 visualizations. example, might add title using labs() ggplot2.  Plotting functions parameters package demonstrated vignette.","code":"library(parameters) library(see)  model <- lm(wt ~ am * cyl, data = mtcars)  plot(parameters(model)) library(parameters) library(see)  model <- lm(wt ~ am * cyl, data = mtcars)  plot(parameters(model)) +   ggplot2::labs(title = \"A Dot-and-Whisker Plot\")"},{"path":"/index.html","id":"bayestestr","dir":"","previous_headings":"","what":"bayestestR","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"Similarly, Bayesian regression model objects, handled bayestestR package (Makowski et al., 2019), see package provides special plotting methods relevant Bayesian models (e.g., Highest Density Interval, HDI). Users can fit model pass model results, extracted via bayestestR, plot().  Plotting functions bayestestR package demonstrated vignette.","code":"library(bayestestR) library(rstanarm) library(see)  set.seed(123) model <- stan_glm(wt ~ mpg, data = mtcars, refresh = 0) result <- hdi(model, ci = c(0.5, 0.75, 0.89, 0.95))  plot(result)"},{"path":"/index.html","id":"performance","dir":"","previous_headings":"","what":"performance","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"performance package primarily concerned checking regression model assumptions (Lüdecke et al., 2021). see package offers tools visualize assumption checks, normality residuals. Users simply pass fit model object relevant performance function (check_normality() example ). , result can passed plot() produce ggplot2 visualization check normality residuals.  Plotting functions performance package demonstrated vignette.","code":"library(performance) library(see)  model <- lm(wt ~ mpg, data = mtcars) check <- check_normality(model) ## Warning: Non-normality of residuals detected (p = 0.016).  plot(check, type = \"qq\")"},{"path":"/index.html","id":"effectsize","dir":"","previous_headings":"","what":"effectsize","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"effectsize package computes variety effect size metrics fitted models assesses practical importance observed effects (Ben-Shachar et al., 2020). conjunction see, users able visualize magnitude uncertainty effect sizes passing model object relevant effectsize function (omega_squared() following example), plot().  Plotting functions effectsize package demonstrated vignette.","code":"library(effectsize) library(see)  model <- aov(wt ~ am * cyl, data = mtcars)  plot(omega_squared(model))"},{"path":"/index.html","id":"modelbased","dir":"","previous_headings":"","what":"modelbased","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"modelbased package computes model-based estimates predictions fitted models (Makowski et al., 2020a). see provides methods quickly visualize model predictions. following example work, need installed emmeans package first.  One can also visualize marginal means (.e., mean factor level averaged predictors) using estimate_means(), passed plot().  Plotting functions modelbased package demonstrated vignette.","code":"library(modelbased) library(see)  model <- lm(mpg ~ wt * as.factor(cyl), data = mtcars)  # for this to work, *emmeans* package should be available predicted <- estimate_prediction(model)  plot(predicted) means <- estimate_means(model)  plot(means)"},{"path":"/index.html","id":"correlation","dir":"","previous_headings":"","what":"correlation","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"correlation package provides unified syntax human-readable code carry many types correlation analysis (Makowski et al., 2020b). user can run summary(correlation(data)) create construct correlation matrix variables dataframe. see, matrix can passed plot() visualize correlations correlation matrix.  Plotting functions correlation package demonstrated vignette.","code":"library(correlation) library(see)  results <- summary(correlation(iris))  plot(results)"},{"path":[]},{"path":"/index.html","id":"modern","dir":"","previous_headings":"","what":"Modern","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"library(ggplot2)  ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length, color = Species)) +   geom_point2() +   theme_modern()"},{"path":"/index.html","id":"lucid","dir":"","previous_headings":"","what":"Lucid","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"library(ggplot2)  p <- ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length, color = Species)) +   geom_point2()  p + theme_lucid()"},{"path":"/index.html","id":"blackboard","dir":"","previous_headings":"","what":"Blackboard","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"p + theme_blackboard()"},{"path":"/index.html","id":"abyss","dir":"","previous_headings":"","what":"Abyss","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"p + theme_abyss()"},{"path":"/index.html","id":"palettes","dir":"","previous_headings":"","what":"Palettes","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"just one example available palettes. See vignette detailed overview palettes color scales.","code":""},{"path":"/index.html","id":"material-design","dir":"","previous_headings":"","what":"Material design","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"p1 <- ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern(axis.text.angle = 45) +   scale_fill_material_d()  p2 <- ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violin() +   theme_modern(axis.text.angle = 45) +   scale_fill_material_d(palette = \"ice\")  p3 <- ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point2() +   theme_modern() +   scale_color_material_c(palette = \"rainbow\")"},{"path":"/index.html","id":"multiple-plots","dir":"","previous_headings":"","what":"Multiple plots","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"plots() function allows us plot figures side side.  plots() function can also used add tags (.e., labels subfigures).","code":"plots(p1, p2, p3, n_columns = 2) plots(p1, p2, p3,   n_columns = 2,   tags = paste(\"Fig. \", 1:3) )"},{"path":[]},{"path":"/index.html","id":"better-looking-points","dir":"","previous_headings":"","what":"Better looking points","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"geom_points2() geom_jitter2() allow points without borders contour.","code":"normal <- ggplot(iris, aes(x = Petal.Width, y = Sepal.Length)) +   geom_point(size = 8, alpha = 0.3) +   theme_modern()  new <- ggplot(iris, aes(x = Petal.Width, y = Sepal.Length)) +   geom_point2(size = 8, alpha = 0.3) +   theme_modern()  plots(normal, new, n_columns = 2)"},{"path":"/index.html","id":"half-violin-half-dot-plot","dir":"","previous_headings":"","what":"Half-violin Half-dot plot","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"Create half-violin half-dot plot, useful visualising distribution sample size time.","code":"ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violindot(fill_dots = \"black\") +   theme_modern() +   scale_fill_material_d()"},{"path":"/index.html","id":"radar-chart-spider-plot","dir":"","previous_headings":"","what":"Radar chart (Spider plot)","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"","code":"library(dplyr) library(tidyr)  # prepare the data in tidy format data <- iris %>%   group_by(Species) %>%   summarise_all(mean) %>%   pivot_longer(-Species)  data %>%   ggplot(aes(     x = name,     y = value,     color = Species,     group = Species,     fill = Species   )) +   geom_polygon(size = 1, alpha = .1) +   coord_radar() +   theme_radar()"},{"path":"/index.html","id":"contributing-and-support","dir":"","previous_headings":"","what":"Contributing and Support","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"case want file issue contribute another way package, please follow guide. questions functionality, may either contact us via email also file issue.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Visualisation Toolbox for easystats and Extra Geoms, Themes and\n    Color Palettes for ggplot2","text":"Ben-Shachar, M. S., Lüdecke, D., & Makowski, D. (2020). effectsize: Estimation effect size indices standardized parameters. Journal Open Source Software, 5(56), 2815. https://doi.org/10.21105/joss.02815 Lüdecke, D., Ben-Shachar, M. S., Patil, ., & Makowski, D. (2020). Extracting, computing exploring parameters statistical models using R. Journal Open Source Software, 5(53), 2445. https://doi.org/10.21105/joss.02445 Lüdecke, D., Ben-Shachar, M. S., Patil, ., Waggoner, P., & Makowski, D. (2021). performance: R package assessment, comparison testing statistical models. Journal Open Source Software, 6(60), 3139. https://doi.org/10.21105/joss.03139 Makowski, D., Ben-Shachar, M. S., & Lüdecke, D. (2019). bayestestR: Describing effects uncertainty, existence significance within Bayesian framework. Journal Open Source Software, 4(40), 1541. https://doi.org/10.21105/joss.01541 Makowski, D., Ben-Shachar, M. S., Patil, ., & Lüdecke, D. (2020a). Estimation model-based predictions, contrasts means. CRAN. https://github.com/easystats/modelbased Makowski, D., Ben-Shachar, M. S., Patil, ., & Lüdecke, D. (2020b). Methods algorithms correlation analysis R. Journal Open Source Software, 5(51), 2306. https://doi.org/10.21105/joss.02306 Patil, . (2021). Visualizations statistical details: ’ggstatsplot’ approach. Journal Open Source Software, 6(61), 3167. https://doi.org/10.21105/joss.03167 R Core Team. (2021). R: language environment statistical computing. R Foundation Statistical Computing. https://www.R-project.org/ Waggoner, P. D. (2020). plotmm: Tidy tools visualizing mixture models. https://CRAN.R-project.org/package=plotmm Wickham, H. (2016). ggplot2: Elegant graphics data analysis. Springer-Verlag New York. Wilkinson, L. (2012). Grammar Graphics. Handbook computational statistics (pp. 375–414). Springer.","code":""},{"path":"/reference/add_plot_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete figure with its attributes — add_plot_attributes","title":"Complete figure with its attributes — add_plot_attributes","text":"data_plot() function usually stores information (title, axes labels, etc.) attributes, add_plot_attributes() adds information plot.","code":""},{"path":"/reference/add_plot_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete figure with its attributes — add_plot_attributes","text":"","code":"add_plot_attributes(x)"},{"path":"/reference/add_plot_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete figure with its attributes — add_plot_attributes","text":"x object.","code":""},{"path":"/reference/add_plot_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete figure with its attributes — add_plot_attributes","text":"","code":"if (FALSE) { library(rstanarm) library(bayestestR) library(see) library(ggplot2)  model <- stan_glm(   Sepal.Length ~ Petal.Width + Species + Sepal.Width,   data = iris,   chains = 2, iter = 200 )  result <- hdi(model, ci = c(0.5, 0.75, 0.9, 0.95)) data <- data_plot(result, data = model)  p <- ggplot(   data,   aes(x = x, y = y, height = height, group = y, fill = fill) ) +   ggridges::geom_ridgeline_gradient()  p p + add_plot_attributes(data) }"},{"path":"/reference/bluebrown_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract blue-brown colors as hex codes — bluebrown_colors","title":"Extract blue-brown colors as hex codes — bluebrown_colors","text":"Can used get hex code specific colors blue-brown color palette. Use bluebrown_colors() see available color.","code":""},{"path":"/reference/bluebrown_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract blue-brown colors as hex codes — bluebrown_colors","text":"","code":"bluebrown_colors(...)"},{"path":"/reference/bluebrown_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract blue-brown colors as hex codes — bluebrown_colors","text":"... Character names colors.","code":""},{"path":"/reference/bluebrown_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract blue-brown colors as hex codes — bluebrown_colors","text":"character vector color-codes.","code":""},{"path":"/reference/bluebrown_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract blue-brown colors as hex codes — bluebrown_colors","text":"","code":"bluebrown_colors() #>  lightblue       blue   darkblue       grey lightbrown      brown  darkbrown  #>  \"#6DC0E0\"  \"#5B93AE\"  \"#1F4454\"  \"#dbdbdb\"  \"#92673C\"  \"#61381A\"  \"#391D07\"   bluebrown_colors(\"blue\", \"brown\") #>      blue     brown  #> \"#5B93AE\" \"#61381A\""},{"path":"/reference/coord_radar.html","id":null,"dir":"Reference","previous_headings":"","what":"Radar coordinate system — coord_radar","title":"Radar coordinate system — coord_radar","text":"Add radar coordinate system useful radar charts.","code":""},{"path":"/reference/coord_radar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radar coordinate system — coord_radar","text":"","code":"coord_radar(theta = \"x\", start = 0, direction = 1, ...)"},{"path":"/reference/coord_radar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radar coordinate system — coord_radar","text":"theta variable map angle (x y) start Offset starting point 12 o'clock radians. Offset applied clockwise anticlockwise depending value direction. direction 1, clockwise; -1, anticlockwise ... arguments passed ggproto.","code":""},{"path":"/reference/coord_radar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radar coordinate system — coord_radar","text":"","code":"# Create a radar/spider chart with ggplot: if (require(\"poorman\") && require(\"tidyr\") && require(\"ggplot2\")) {   data <- iris %>%     group_by(Species) %>%     summarise(across(everything(), mean)) %>%     pivot_longer(-Species)    data %>%     ggplot(aes(x = name, y = value, color = Species, group = Species)) +     geom_polygon(fill = NA, size = 2) +     coord_radar(start = -pi / 4) } #> Loading required package: poorman #>  #>   I'd seen my father. He was a poor man, and I watched him do astonishing things. #>     - Sidney Poitier #>  #> Attaching package: ‘poorman’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> Loading required package: tidyr #>  #> Attaching package: ‘tidyr’ #> The following objects are masked from ‘package:poorman’: #>  #>     %>%, all_of, any_of, contains, ends_with, everything, last_col, #>     matches, num_range, replace_na, starts_with, unite #> Loading required package: ggplot2"},{"path":"/reference/data_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare objects for plotting or plot objects — data_plot","title":"Prepare objects for plotting or plot objects — data_plot","text":"data_plot() extracts transforms object plotting, plot() visualizes results functions different packages easystats-project. See documentation object's class: bayestestR::bayesfactor_models() bayestestR::bayesfactor_parameters() bayestestR::equivalence_test() bayestestR::estimate_density() bayestestR::hdi() bayestestR::p_direction() bayestestR::p_significance() bayestestR::si() effectsize::effectsize() modelbased::estimate_contrasts() parameters::compare_parameters() parameters::describe_distribution() parameters::model_parameters() parameters::principal_components() parameters::n_clusters() parameters::n_factors() parameters::simulate_parameters() performance::check_collinearity() performance::check_heteroscedasticity() performance::check_homogeneity() performance::check_normality() performance::check_outliers() performance::compare_performance() performance::performance_roc() performance::check_posterior_predictions()","code":""},{"path":"/reference/data_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare objects for plotting or plot objects — data_plot","text":"","code":"data_plot(x, data = NULL, ...)"},{"path":"/reference/data_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare objects for plotting or plot objects — data_plot","text":"x object. data original data used create object. Can statistical model. ... Arguments passed methods.","code":""},{"path":"/reference/data_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare objects for plotting or plot objects — data_plot","text":"data_plot() situation needed purpose plotting, since plot()-functions see internally call data_plot() prepare data plotting.  Many plot()-functions data-argument needed data model plotting retrieved via data_plot(). cases, plot() gives error asks providing data models.  plot()-functions work ---box, .e. need much calling plot(<object>) (see 'Examples'). plot-functions allow specify arguments modify transparency color geoms, shown 'Usage' section.","code":""},{"path":[]},{"path":"/reference/data_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare objects for plotting or plot objects — data_plot","text":"","code":"if (FALSE) { library(bayestestR) if (require(\"rstanarm\")) {   model <- stan_glm(     Sepal.Length ~ Petal.Width * Species,     data = iris,     chains = 2, iter = 200, refresh = 0   )    x <- rope(model)   plot(x)    x <- hdi(model)   plot(x) + theme_modern()    data <- rnorm(1000, 1)   x <- p_direction(data)   plot(x)    x <- p_direction(model)   plot(x)    model <- stan_glm(     mpg ~ wt + gear + cyl + disp,     chains = 2,     iter = 200,     refresh = 0,     data = mtcars   )   x <- equivalence_test(model)   plot(x) } }"},{"path":"/reference/flat_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Flat UI colors as hex codes — flat_colors","title":"Extract Flat UI colors as hex codes — flat_colors","text":"Can used get hex code specific colors Flat UI color palette. Use flat_colors() see available color.","code":""},{"path":"/reference/flat_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Flat UI colors as hex codes — flat_colors","text":"","code":"flat_colors(...)"},{"path":"/reference/flat_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Flat UI colors as hex codes — flat_colors","text":"... Character names colors.","code":""},{"path":"/reference/flat_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Flat UI colors as hex codes — flat_colors","text":"character vector color-codes.","code":""},{"path":"/reference/flat_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Flat UI colors as hex codes — flat_colors","text":"","code":"flat_colors() #>         red    dark red      purple deep purple        blue  light blue  #>   \"#e74c3c\"   \"#c0392b\"   \"#9b59b6\"   \"#8e44ad\"   \"#2980b9\"   \"#3498db\"  #>        cyan        teal       green light green      yellow       amber  #>   \"#1abc9c\"   \"#16a085\"   \"#27ae60\"   \"#2ecc71\"   \"#f1c40f\"   \"#f39c12\"  #>      orange deep orange        grey   blue grey  #>   \"#e67e22\"   \"#d35400\"   \"#95a5a6\"   \"#7f8c8d\"   flat_colors(\"dark red\", \"teal\") #>  dark red      teal  #> \"#c0392b\" \"#16a085\""},{"path":"/reference/geom_binomdensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Add dot-densities for binary y variables — geom_binomdensity","title":"Add dot-densities for binary y variables — geom_binomdensity","text":"Add dot-densities binary y variables","code":""},{"path":"/reference/geom_binomdensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add dot-densities for binary y variables — geom_binomdensity","text":"","code":"geom_binomdensity(data, x, y, scale = \"auto\", ...)"},{"path":"/reference/geom_binomdensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add dot-densities for binary y variables — geom_binomdensity","text":"data dataframe. x, y Characters corresponding x y axis. Note y must variable two unique values. scale Character specifying method scaling dot-densities. Can : 'auto' (corresponding square root proportion), 'proportion', 'density' custom list values factor level (see examples). ... arguments passed ggdist::geom_dots.","code":""},{"path":"/reference/geom_binomdensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add dot-densities for binary y variables — geom_binomdensity","text":"","code":"library(ggplot2) library(see)  data <- iris[1:100, ]  ggplot() +   geom_binomdensity(data,     x = \"Sepal.Length\",     y = \"Species\",     fill = \"red\",     color = NA   )   # Different scales data[1:70, \"Species\"] <- \"setosa\" # Create unbalanced proportions  ggplot() +   geom_binomdensity(data, x = \"Sepal.Length\", y = \"Species\", scale = \"auto\")  ggplot() +   geom_binomdensity(data, x = \"Sepal.Length\", y = \"Species\", scale = \"density\")  ggplot() +   geom_binomdensity(data, x = \"Sepal.Length\", y = \"Species\", scale = \"proportion\")  ggplot() +   geom_binomdensity(data,     x = \"Sepal.Length\", y = \"Species\",     scale = list(\"setosa\" = 0.4, \"versicolor\" = 0.6)   )"},{"path":"/reference/geom_from_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot2 geom(s) from a list — geom_from_list","title":"Create ggplot2 geom(s) from a list — geom_from_list","text":"helper functions built top ggplot2::layer() can used add geom(s), whose type content specified list.","code":""},{"path":"/reference/geom_from_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot2 geom(s) from a list — geom_from_list","text":"","code":"geom_from_list(x, ...)  geoms_from_list(x, ...)"},{"path":"/reference/geom_from_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot2 geom(s) from a list — geom_from_list","text":"x list containing: geom type (e.g. geom = \"point\"), list aesthetics (e.g. aes = list(x = \"mpg\", y = \"wt\")), data (e.g. data = mtcars), parameters. geoms_from_list() (\"geoms\" \"s\"), input must list lists, ideally named \"l1\", \"l2\", \"l3\", etc. ... Additional arguments passed ggplot2::layer().","code":""},{"path":"/reference/geom_from_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ggplot2 geom(s) from a list — geom_from_list","text":"","code":"library(ggplot2)  # Example 1 (basic geoms and labels) -------------------------- l1 <- list(   geom = \"point\",   data = mtcars,   aes = list(x = \"mpg\", y = \"wt\", size = \"hp\", color = \"hp\"),   show.legend = c(\"size\" = FALSE) ) l2 <- list(   geom = \"labs\",   title = \"A Title\" )  ggplot() +   geom_from_list(l1) +   geom_from_list(l2)   ggplot() +   geoms_from_list(list(l1 = l1, l2 = l2))   # Example 2 (Violin, boxplots, ...) -------------------------- l1 <- list(   geom = \"violin\",   data = iris,   aes = list(x = \"Species\", y = \"Sepal.Width\") ) l2 <- list(   geom = \"boxplot\",   data = iris,   aes = list(x = \"Species\", y = \"Sepal.Width\"),   outlier.shape = NA ) l3 <- list(   geom = \"jitter\",   data = iris,   width = 0.1,   aes = list(x = \"Species\", y = \"Sepal.Width\") )  ggplot() +   geom_from_list(l1) +   geom_from_list(l2) +   geom_from_list(l3)   # Example 3 (2D density) -------------------------- ggplot() +   geom_from_list(list(     geom = \"density_2d\", data = iris,     aes = list(x = \"Sepal.Width\", y = \"Petal.Length\")   ))  ggplot() +   geom_from_list(list(     geom = \"density_2d_filled\", data = iris,     aes = list(x = \"Sepal.Width\", y = \"Petal.Length\")   ))  ggplot() +   geom_from_list(list(     geom = \"density_2d_polygon\", data = iris,     aes = list(x = \"Sepal.Width\", y = \"Petal.Length\")   ))  ggplot() +   geom_from_list(list(     geom = \"density_2d_raster\", data = iris,     aes = list(x = \"Sepal.Width\", y = \"Petal.Length\")   )) +   scale_x_continuous(expand = c(0, 0)) +   scale_y_continuous(expand = c(0, 0))   # Example 4 (facet and coord flip) --------------------------  ggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +   geom_point() +   geom_from_list(list(geom = \"hline\", yintercept = 2)) +   geom_from_list(list(geom = \"coord_flip\")) +   geom_from_list(list(geom = \"facet_wrap\", facets = \"~ Species\", scales = \"free\"))   # Example 5 (theme and scales) -------------------------- ggplot(iris, aes(x = Sepal.Length, y = Petal.Width, color = Species)) +   geom_point() +   geom_from_list(list(geom = \"scale_color_viridis_d\", option = \"inferno\")) +   geom_from_list(list(geom = \"theme\", legend.position = \"top\"))   ggplot(iris, aes(x = Sepal.Length, y = Petal.Width, color = Species)) +   geom_point() +   geom_from_list(list(geom = \"scale_color_material_d\", palette = \"rainbow\")) +   geom_from_list(list(geom = \"theme_void\"))   # Example 5 (Smooths and side densities) --------------------------  ggplot(iris, aes(x = Sepal.Length, y = Petal.Width)) +   geom_from_list(list(geom = \"point\")) +   geom_from_list(list(geom = \"smooth\", color = \"red\")) +   geom_from_list(list(aes = list(x = \"Sepal.Length\"), geom = \"ggside::geom_xsidedensity\")) +   geom_from_list(list(geom = \"ggside::scale_xsidey_continuous\", breaks = NULL)) #> Registered S3 method overwritten by 'ggside': #>   method from    #>   +.gg   ggplot2   # Example 6 (ggraph) -------------------------- if (require(\"tidygraph\", quietly = TRUE) &&   require(\"ggraph\", quietly = TRUE)) {   # Prepare graph   nodes <- data.frame(name = c(\"Dom\", \"Mattan\", \"Daniel\", \"Brenton\"))   edges <- data.frame(     from = c(1, 1, 1, 2, 3, 3, 4, 4, 4),     to = c(2, 3, 4, 1, 1, 2, 1, 2, 3)   )   data <- tidygraph::tbl_graph(nodes = nodes, edges = edges)    ggraph(data, layout = \"kk\") +     geom_from_list(list(geom = \"ggraph::geom_edge_arc\")) +     geom_from_list(list(geom = \"ggraph::geom_node_point\", size = 10)) +     geom_from_list(list(geom = \"ggraph::geom_node_label\", aes = list(label = \"name\"))) } #>  #> Attaching package: ‘tidygraph’ #> The following objects are masked from ‘package:poorman’: #>  #>     %>%, anti_join, arrange, contains, distinct, ends_with, everything, #>     filter, full_join, group_by, group_data, group_indices, group_keys, #>     group_size, group_vars, groups, inner_join, left_join, matches, #>     mutate, n, n_groups, num_range, pull, rename, right_join, select, #>     semi_join, slice, starts_with, transmute, ungroup #> The following object is masked from ‘package:stats’: #>  #>     filter"},{"path":"/reference/geom_point2.html","id":null,"dir":"Reference","previous_headings":"","what":"Better looking points — geom_point2","title":"Better looking points — geom_point2","text":"Somewhat nicer points (especially case transparency) without outline strokes (borders, contours) default.","code":""},{"path":"/reference/geom_point2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Better looking points — geom_point2","text":"","code":"geom_point2(..., stroke = 0, shape = 16)  geom_jitter2(..., size = 2, stroke = 0, shape = 16)  geom_pointrange2(..., stroke = 0)  geom_count2(..., stroke = 0)  geom_count_borderless(..., stroke = 0)  geom_point_borderless(...)  geom_jitter_borderless(...)  geom_pointrange_borderless(...)"},{"path":"/reference/geom_point2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Better looking points — geom_point2","text":"... arguments passed ggplot2::geom_point(), ggplot2::geom_jitter(), ggplot2::geom_pointrange(), ggplot2::geom_count(). stroke Stroke thickness. shape Shape points. size Size points.","code":""},{"path":"/reference/geom_point2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Better looking points — geom_point2","text":"color aesthetics geom_point_borderless() \"fill\", \"color\". See 'Examples'.","code":""},{"path":"/reference/geom_point2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Better looking points — geom_point2","text":"","code":"library(ggplot2) library(see)  normal <- ggplot(iris, aes(x = Petal.Width, y = Sepal.Length)) +   geom_point(size = 8, alpha = 0.3) +   theme_modern()  new <- ggplot(iris, aes(x = Petal.Width, y = Sepal.Length)) +   geom_point2(size = 8, alpha = 0.3) +   theme_modern()  plots(normal, new, n_columns = 2)   ggplot(iris, aes(x = Petal.Width, y = Sepal.Length, fill = Species)) +   geom_point_borderless(size = 4) +   theme_modern()   theme_set(theme_abyss()) ggplot(iris, aes(x = Petal.Width, y = Sepal.Length, fill = Species)) +   geom_point_borderless(size = 4)"},{"path":"/reference/geom_poolpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Pool ball points — geom_poolpoint","title":"Pool ball points — geom_poolpoint","text":"Points labelled observation name.","code":""},{"path":"/reference/geom_poolpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pool ball points — geom_poolpoint","text":"","code":"geom_poolpoint(   label,   size_text = 3.88,   size_background = size_text * 2,   size_point = size_text * 3.5,   ... )  geom_pooljitter(   label,   size_text = 3.88,   size_background = size_text * 2,   size_point = size_text * 3.5,   jitter = 0.1,   ... )"},{"path":"/reference/geom_poolpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pool ball points — geom_poolpoint","text":"label Label add inside points. size_text Size text. size_background Size white background circle. size_point Size ball. ... arguments passed geom_point. jitter Width height position jitter.","code":""},{"path":"/reference/geom_poolpoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pool ball points — geom_poolpoint","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Petal.Width, y = Sepal.Length, color = Species)) +   geom_poolpoint(label = rownames(iris)) +   scale_color_flat_d() +   theme_modern()    ggplot(iris, aes(x = Petal.Width, y = Sepal.Length, color = Species)) +   geom_pooljitter(label = rownames(iris)) +   scale_color_flat_d() +   theme_modern()"},{"path":"/reference/geom_violindot.html","id":null,"dir":"Reference","previous_headings":"","what":"Half-violin Half-dot plot — geom_violindot","title":"Half-violin Half-dot plot — geom_violindot","text":"Create half-violin half-dot plot, useful visualising distribution sample size time.","code":""},{"path":"/reference/geom_violindot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Half-violin Half-dot plot — geom_violindot","text":"","code":"geom_violindot(   mapping = NULL,   data = NULL,   trim = TRUE,   scale = c(\"area\", \"count\", \"width\"),   show.legend = NA,   inherit.aes = TRUE,   dots_size = 0.7,   dots_color = NULL,   dots_fill = NULL,   binwidth = 0.05,   position_dots = ggplot2::position_nudge(x = -0.025, y = 0),   ...,   size_dots = dots_size,   color_dots = dots_color,   fill_dots = dots_fill )"},{"path":"/reference/geom_violindot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Half-violin Half-dot plot — geom_violindot","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). trim TRUE (default), trim tails violins range data. FALSE, trim tails. scale \"area\" (default), violins area (trimming tails). \"count\", areas scaled proportionally number observations. \"width\", violins maximum width. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). binwidth method \"dotdensity\", specifies maximum bin width. method \"histodot\", specifies bin width. Defaults 1/30 range data position_dots Position adjustment dots, either string, result call position adjustment function. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. size_dots, dots_size Size adjustment dots. color_dots, dots_color Color adjustment dots. fill_dots, dots_fill Fill adjustment dots.","code":""},{"path":"/reference/geom_violindot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Half-violin Half-dot plot — geom_violindot","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violindot() +   theme_modern()"},{"path":"/reference/geom_violinhalf.html","id":null,"dir":"Reference","previous_headings":"","what":"Half-violin plot — geom_violinhalf","title":"Half-violin plot — geom_violinhalf","text":"Create half-violin plot.","code":""},{"path":"/reference/geom_violinhalf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Half-violin plot — geom_violinhalf","text":"","code":"geom_violinhalf(   mapping = NULL,   data = NULL,   stat = \"ydensity\",   position = \"dodge\",   trim = TRUE,   flip = FALSE,   scale = c(\"area\", \"count\", \"width\"),   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"/reference/geom_violinhalf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Half-violin plot — geom_violinhalf","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. trim TRUE (default), trim tails violins range data. FALSE, trim tails. flip half-violin plot switch directions? default, FALSE half-violin geoms flat-side facing leftward. flip = TRUE, flat-sides face rightward. Optionally, numeric vector can supplied indicating specific geoms flipped. See examples details. scale \"area\" (default), violins area (trimming tails). \"count\", areas scaled proportionally number observations. \"width\", violins maximum width. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"/reference/geom_violinhalf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Half-violin plot — geom_violinhalf","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violinhalf() +   theme_modern() +   scale_fill_material_d()   # To flip all half-violin geoms, use `flip = TRUE`: ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violinhalf(flip = TRUE) +   theme_modern() +   scale_fill_material_d()   # To flip the half-violin geoms for the first and third groups only # by passing a numeric vector ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violinhalf(flip = c(1, 3)) +   theme_modern() +   scale_fill_material_d()"},{"path":"/reference/ggplot2-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"GeomViolinHalf — GeomViolinHalf","title":"GeomViolinHalf — GeomViolinHalf","text":"GeomViolinHalf","code":""},{"path":"/reference/golden_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Golden Ratio — golden_ratio","title":"Golden Ratio — golden_ratio","text":"Returns golden ratio (1.618034...). Useful easily obtain golden proportions, instance horizontal figure, want height 8, can set width golden_ratio(8).","code":""},{"path":"/reference/golden_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Golden Ratio — golden_ratio","text":"","code":"golden_ratio(x = 1)"},{"path":"/reference/golden_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Golden Ratio — golden_ratio","text":"x number multiplied golden ratio. default (x = 1) returns value golden ratio.","code":""},{"path":"/reference/golden_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Golden Ratio — golden_ratio","text":"","code":"golden_ratio() #> [1] 1.618034 golden_ratio(10) #> [1] 16.18034"},{"path":"/reference/material_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract material design colors as hex codes — material_colors","title":"Extract material design colors as hex codes — material_colors","text":"Can used get hex code specific colors material design color palette. Use material_colors() see available color.","code":""},{"path":"/reference/material_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract material design colors as hex codes — material_colors","text":"","code":"material_colors(...)"},{"path":"/reference/material_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract material design colors as hex codes — material_colors","text":"... Character names colors.","code":""},{"path":"/reference/material_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract material design colors as hex codes — material_colors","text":"character vector color-codes.","code":""},{"path":"/reference/material_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract material design colors as hex codes — material_colors","text":"","code":"material_colors() #>         red        pink      purple deep purple      indigo        blue  #>   \"#f44336\"   \"#E91E63\"   \"#9C27B0\"   \"#673AB7\"   \"#3F51B5\"   \"#2196F3\"  #>  light blue        cyan        teal       green light green        lime  #>   \"#03A9F4\"   \"#00BCD4\"   \"#009688\"   \"#4CAF50\"   \"#8BC34A\"   \"#CDDC39\"  #>      yellow       amber      orange deep orange       brown        grey  #>   \"#FFEB3B\"   \"#FFC107\"   \"#FF9800\"   \"#FF5722\"   \"#795548\"   \"#9E9E9E\"  #>   blue grey  #>   \"#607D8B\"   material_colors(\"indigo\", \"lime\") #>    indigo      lime  #> \"#3F51B5\" \"#CDDC39\""},{"path":"/reference/metro_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Metro colors as hex codes — metro_colors","title":"Extract Metro colors as hex codes — metro_colors","text":"Can used get hex code specific colors Metro color palette. Use metro_colors() see available color.","code":""},{"path":"/reference/metro_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Metro colors as hex codes — metro_colors","text":"","code":"metro_colors(...)"},{"path":"/reference/metro_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Metro colors as hex codes — metro_colors","text":"... Character names colors.","code":""},{"path":"/reference/metro_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Metro colors as hex codes — metro_colors","text":"character vector color-codes.","code":""},{"path":"/reference/metro_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Metro colors as hex codes — metro_colors","text":"","code":"metro_colors() #>         red    dark red      purple deep purple        blue  light blue  #>   \"#e51400\"   \"#a20025\"   \"#aa00ff\"   \"#76608a\"   \"#0050ef\"   \"#1ba1e2\"  #>        teal       green light green      yellow       amber      orange  #>   \"#00aba9\"   \"#008a00\"   \"#60a917\"   \"#e3c800\"   \"#f0a30a\"   \"#fa6800\"  #> deep orange   blue grey  #>   \"#a0522d\"   \"#647687\"   metro_colors(\"dark red\", \"teal\") #>  dark red      teal  #> \"#a20025\" \"#00aba9\""},{"path":"/reference/palette_bluebrown.html","id":null,"dir":"Reference","previous_headings":"","what":"Blue-brown design color palette — palette_bluebrown","title":"Blue-brown design color palette — palette_bluebrown","text":"palette based blue-brown colors.","code":""},{"path":"/reference/palette_bluebrown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blue-brown design color palette — palette_bluebrown","text":"","code":"palette_bluebrown(palette = \"contrast\", reverse = FALSE, ...)"},{"path":"/reference/palette_bluebrown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blue-brown design color palette — palette_bluebrown","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_bluebrown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blue-brown design color palette — palette_bluebrown","text":"function usually called directly, within scale_color_bluebrown().","code":""},{"path":"/reference/palette_flat.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat UI color palette — palette_flat","title":"Flat UI color palette — palette_flat","text":"palette based Flat UI.","code":""},{"path":"/reference/palette_flat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat UI color palette — palette_flat","text":"","code":"palette_flat(palette = \"contrast\", reverse = FALSE, ...)"},{"path":"/reference/palette_flat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat UI color palette — palette_flat","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_flat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flat UI color palette — palette_flat","text":"function usually called directly, within scale_color_flat().","code":""},{"path":"/reference/palette_material.html","id":null,"dir":"Reference","previous_headings":"","what":"Material design color palette — palette_material","title":"Material design color palette — palette_material","text":"palette based material design colors.","code":""},{"path":"/reference/palette_material.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Material design color palette — palette_material","text":"","code":"palette_material(palette = \"contrast\", reverse = FALSE, ...)"},{"path":"/reference/palette_material.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Material design color palette — palette_material","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_material.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Material design color palette — palette_material","text":"function usually called directly, within scale_color_material().","code":""},{"path":"/reference/palette_metro.html","id":null,"dir":"Reference","previous_headings":"","what":"Metro color palette — palette_metro","title":"Metro color palette — palette_metro","text":"palette based Metro colors.","code":""},{"path":"/reference/palette_metro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metro color palette — palette_metro","text":"","code":"palette_metro(palette = \"complement\", reverse = FALSE, ...)"},{"path":"/reference/palette_metro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metro color palette — palette_metro","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_metro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metro color palette — palette_metro","text":"function usually called directly, within scale_color_metro().","code":""},{"path":"/reference/palette_pizza.html","id":null,"dir":"Reference","previous_headings":"","what":"Pizza color palette — palette_pizza","title":"Pizza color palette — palette_pizza","text":"palette based authentic neapolitan pizzas.","code":""},{"path":"/reference/palette_pizza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pizza color palette — palette_pizza","text":"","code":"palette_pizza(palette = \"margherita\", reverse = FALSE, ...)"},{"path":"/reference/palette_pizza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pizza color palette — palette_pizza","text":"palette Pizza type. Can \"margherita\" (default), \"margherita_crust\", \"diavola\" \"diavola_crust\". reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_pizza.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pizza color palette — palette_pizza","text":"function usually called directly, within scale_color_pizza().","code":""},{"path":"/reference/palette_see.html","id":null,"dir":"Reference","previous_headings":"","what":"See design color palette — palette_see","title":"See design color palette — palette_see","text":"See design color palette","code":""},{"path":"/reference/palette_see.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See design color palette — palette_see","text":"","code":"palette_see(palette = \"contrast\", reverse = FALSE, ...)"},{"path":"/reference/palette_see.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See design color palette — palette_see","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_see.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"See design color palette — palette_see","text":"function usually called directly, within scale_color_see().","code":""},{"path":"/reference/palette_social.html","id":null,"dir":"Reference","previous_headings":"","what":"Social color palette — palette_social","title":"Social color palette — palette_social","text":"palette based Social colors.","code":""},{"path":"/reference/palette_social.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social color palette — palette_social","text":"","code":"palette_social(palette = \"complement\", reverse = FALSE, ...)"},{"path":"/reference/palette_social.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Social color palette — palette_social","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/palette_social.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Social color palette — palette_social","text":"function usually called directly, within scale_color_social().","code":""},{"path":"/reference/pizza_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pizza colors as hex codes — pizza_colors","title":"Extract pizza colors as hex codes — pizza_colors","text":"Extract pizza colors hex codes","code":""},{"path":"/reference/pizza_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pizza colors as hex codes — pizza_colors","text":"","code":"pizza_colors(...)"},{"path":"/reference/pizza_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pizza colors as hex codes — pizza_colors","text":"... Character names pizza ingredients.","code":""},{"path":"/reference/pizza_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pizza colors as hex codes — pizza_colors","text":"character vector color-codes.","code":""},{"path":"/reference/plot.see_bayesfactor_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","title":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","text":"plot() method bayestestR::bayesfactor_models() function. plots visualize posterior probabilities compared models.","code":""},{"path":"/reference/plot.see_bayesfactor_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","text":"","code":"# S3 method for see_bayesfactor_models plot(   x,   n_pies = c(\"one\", \"many\"),   value = c(\"none\", \"BF\", \"probability\"),   sort = FALSE,   log = FALSE,   prior_odds = NULL,   ... )"},{"path":"/reference/plot.see_bayesfactor_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","text":"x object. n_pies Number pies. value value display. sort behavior argument depends plotting contexts. Plotting model parameters: NULL, coefficients plotted order appear summary. Setting sort = \"ascending\" sort = \"descending\" sorts coefficients ascending descending order, respectively. Setting sort = TRUE sort = \"ascending\". Plotting Bayes factors: Sort pie-slices posterior probability (descending)? log Logical decides whether display log-transformed Bayes factors. prior_odds optional vector prior odds models. See BayesFactor::priorOdds. size pizza slices corresponds posterior probability (function prior probability Bayes Factor), custom prior_odds change slices' size. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_bayesfactor_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_bayesfactor_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for Bayes Factors for model comparison — plot.see_bayesfactor_models","text":"","code":"library(bayestestR) library(see)  lm0 <- lm(qsec ~ 1, data = mtcars) lm1 <- lm(qsec ~ drat, data = mtcars) lm2 <- lm(qsec ~ wt, data = mtcars) lm3 <- lm(qsec ~ drat + wt, data = mtcars)  result <- bayesfactor_models(lm1, lm2, lm3, denominator = lm0)  plot(result, n_pies = \"one\", value = \"probability\", sort = TRUE) +   scale_fill_pizza(reverse = TRUE)   plot(result, n_pies = \"many\", value = \"BF\", log = TRUE) +   scale_fill_pizza(reverse = FALSE)"},{"path":"/reference/plot.see_bayesfactor_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for Bayes Factors for a single parameter — plot.see_bayesfactor_parameters","title":"Plot method for Bayes Factors for a single parameter — plot.see_bayesfactor_parameters","text":"plot() method bayestestR::bayesfactor_parameters() function.","code":""},{"path":"/reference/plot.see_bayesfactor_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for Bayes Factors for a single parameter — plot.see_bayesfactor_parameters","text":"","code":"# S3 method for see_bayesfactor_parameters plot(   x,   size_point = 2,   rope_color = \"#0171D3\",   rope_alpha = 0.2,   show_intercept = FALSE,   ... )"},{"path":"/reference/plot.see_bayesfactor_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for Bayes Factors for a single parameter — plot.see_bayesfactor_parameters","text":"x object. size_point Numeric specifying size point-geoms. rope_color Character specifying color ROPE ribbon. rope_alpha Numeric specifying transparency level ROPE ribbon. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_bayesfactor_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for Bayes Factors for a single parameter — plot.see_bayesfactor_parameters","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_collinearity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for multicollinearity checks — plot.see_check_collinearity","title":"Plot method for multicollinearity checks — plot.see_check_collinearity","text":"plot() method performance::check_collinearity() function.","code":""},{"path":"/reference/plot.see_check_collinearity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for multicollinearity checks — plot.see_check_collinearity","text":"","code":"# S3 method for see_check_collinearity plot(x, data = NULL, colors = c(\"#3aaf85\", \"#1b6ca8\", \"#cd201f\"), ...)"},{"path":"/reference/plot.see_check_collinearity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for multicollinearity checks — plot.see_check_collinearity","text":"x object. data original data used create object. Can statistical model. colors Character vector length two, indicating colors (hex-format) points line. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_collinearity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for multicollinearity checks — plot.see_check_collinearity","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_collinearity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for multicollinearity checks — plot.see_check_collinearity","text":"","code":"library(performance) m <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_collinearity(m) result #> # Check for Multicollinearity #>  #> Low Correlation #>  #>  Term  VIF Increased SE Tolerance #>  gear 1.53         1.24      0.65 #>  #> Moderate Correlation #>  #>  Term  VIF Increased SE Tolerance #>    wt 5.05         2.25      0.20 #>   cyl 5.41         2.33      0.18 #>  disp 9.97         3.16      0.10 plot(result)"},{"path":"/reference/plot.see_check_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","title":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","text":"plot() method performance::check_distribution() function.","code":""},{"path":"/reference/plot.see_check_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","text":"","code":"# S3 method for see_check_distribution plot(x, size_point = 2, panel = TRUE, ...)"},{"path":"/reference/plot.see_check_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","text":"x object. size_point Numeric specifying size point-geoms. panel Logical, TRUE, plots arranged panels; else, single plots returned. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for classifying the distribution of a model-family — plot.see_check_distribution","text":"","code":"# \\donttest{ if (require(\"randomForest\") && require(\"performance\")) {   m <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars)   result <- check_distribution(m)   result   plot(result) } #> Loading required package: randomForest #> randomForest 4.7-1 #> Type rfNews() to see new features/changes/bug fixes. #>  #> Attaching package: ‘randomForest’ #> The following object is masked from ‘package:ggplot2’: #>  #>     margin #> Error: Failed at retrieving data :( Please provide original model or data through the `data` argument # }"},{"path":"/reference/plot.see_check_heteroscedasticity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","title":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","text":"plot() method performance::check_heteroscedasticity() function.","code":""},{"path":"/reference/plot.see_check_heteroscedasticity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","text":"","code":"# S3 method for see_check_heteroscedasticity plot(x, data = NULL, ...)"},{"path":"/reference/plot.see_check_heteroscedasticity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","text":"x object. data original data used create object. Can statistical model. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_heteroscedasticity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_heteroscedasticity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for (non-)constant error variance checks — plot.see_check_heteroscedasticity","text":"","code":"library(performance) m <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_heteroscedasticity(m) #> Warning: Heteroscedasticity (non-constant error variance) detected (p = 0.042). #>  result #> [1] 0.04232236 #> attr(,\"object_name\") #> [1] \"m\" #> attr(,\"class\") #> [1] \"check_heteroscedasticity\"     \"see_check_heteroscedasticity\" #> [3] \"numeric\"                      plot(result, data = m) # data required for pkgdown"},{"path":"/reference/plot.see_check_homogeneity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","title":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","text":"plot() method performance::check_homogeneity() function.","code":""},{"path":"/reference/plot.see_check_homogeneity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","text":"","code":"# S3 method for see_check_homogeneity plot(x, data = NULL, ...)"},{"path":"/reference/plot.see_check_homogeneity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","text":"x object. data original data used create object. Can statistical model. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_homogeneity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_homogeneity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for homogeneity of variances checks — plot.see_check_homogeneity","text":"","code":"library(performance) model <<- lm(len ~ supp + dose, data = ToothGrowth) result <- check_homogeneity(model) #> OK: There is not clear evidence for different variances across groups (Bartlett Test, p = 0.226). #>  result #> [1] 0.2260997 #> attr(,\"object_name\") #> [1] \"model\" #> attr(,\"method\") #> [1] \"Bartlett Test\" #> attr(,\"class\") #> [1] \"check_homogeneity\"     \"see_check_homogeneity\" \"numeric\"               plot(result)"},{"path":"/reference/plot.see_check_normality.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","title":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","text":"plot() method performance::check_normality() function.","code":""},{"path":"/reference/plot.see_check_normality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","text":"","code":"# S3 method for see_check_normality plot(   x,   type = c(\"density\", \"qq\", \"pp\"),   data = NULL,   size_line = 0.8,   size_point = 2,   alpha = 0.2,   dot_alpha = 0.8,   colors = c(\"#3aaf85\", \"#1b6ca8\"),   detrend = FALSE,   ... )"},{"path":"/reference/plot.see_check_normality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","text":"x object. type Character vector, indicating type plot. data original data used create object. Can statistical model. size_line Numeric value specifying size line geoms. size_point Numeric specifying size point-geoms. dot_alpha, alpha Numeric value specifying alpha level confidence bands point-geoms. colors Character vector length two, indicating colors (hex-format) points line. detrend Logical decides plot detrended. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_normality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_normality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for check model for (non-)normality of residuals — plot.see_check_normality","text":"","code":"library(performance) m <<- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- check_normality(m) #> OK: residuals appear as normally distributed (p = 0.230). #>  plot(result)"},{"path":"/reference/plot.see_check_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for checking outliers — plot.see_check_outliers","title":"Plot method for checking outliers — plot.see_check_outliers","text":"plot() method performance::check_outliers() function.","code":""},{"path":"/reference/plot.see_check_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for checking outliers — plot.see_check_outliers","text":"","code":"# S3 method for see_check_outliers plot(   x,   size_text = 3.5,   size_line = 0.8,   dot_alpha = 0.8,   colors = c(\"#3aaf85\", \"#1b6ca8\", \"#cd201f\"),   rescale_distance = TRUE,   type = c(\"dots\", \"bars\"),   show_labels = TRUE,   ... )"},{"path":"/reference/plot.see_check_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for checking outliers — plot.see_check_outliers","text":"x object. size_text Numeric value specifying size text labels. size_line Numeric value specifying size line geoms. dot_alpha Numeric value specifying alpha level confidence bands point-geoms. colors Character vector length two, indicating colors (hex-format) points line. rescale_distance Logical. TRUE, distance values rescaled range 0 1. mainly due better catch differences distance values. type Character vector, indicating type plot. show_labels Logical. TRUE, text labels displayed. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_check_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for checking outliers — plot.see_check_outliers","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_check_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for checking outliers — plot.see_check_outliers","text":"","code":"library(performance) data(mtcars) mt1 <- mtcars[, c(1, 3, 4)] mt2 <- rbind(   mt1,   data.frame(mpg = c(37, 40), disp = c(300, 400), hp = c(110, 120)) ) model <- lm(disp ~ mpg + hp, data = mt2) plot(check_outliers(model))"},{"path":"/reference/plot.see_compare_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for comparison of model parameters — plot.see_compare_parameters","title":"Plot method for comparison of model parameters — plot.see_compare_parameters","text":"plot() method parameters::compare_parameters() function.","code":""},{"path":"/reference/plot.see_compare_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for comparison of model parameters — plot.see_compare_parameters","text":"","code":"# S3 method for see_compare_parameters plot(   x,   show_intercept = FALSE,   size_point = 0.8,   size_text = NA,   dodge_position = 0.8,   sort = NULL,   n_columns = NULL,   show_labels = FALSE,   ... )"},{"path":"/reference/plot.see_compare_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for comparison of model parameters — plot.see_compare_parameters","text":"x object. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. size_point Numeric specifying size point-geoms. size_text Numeric value specifying size text labels. dodge_position Numeric value specifying amount \"dodging\" (spacing) geoms. sort behavior argument depends plotting contexts. Plotting model parameters: NULL, coefficients plotted order appear summary. Setting sort = \"ascending\" sort = \"descending\" sorts coefficients ascending descending order, respectively. Setting sort = TRUE sort = \"ascending\". Plotting Bayes factors: Sort pie-slices posterior probability (descending)? n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. show_labels Logical. TRUE, text labels displayed. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_compare_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for comparison of model parameters — plot.see_compare_parameters","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_compare_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for comparison of model parameters — plot.see_compare_parameters","text":"","code":"if (require(\"insight\") &&   require(\"parameters\") &&   packageVersion(\"insight\") >= \"0.13.0\") {   data(iris)   lm1 <- lm(Sepal.Length ~ Species, data = iris)   lm2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris)   lm3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris)   result <- compare_parameters(lm1, lm2, lm3)   plot(result) } #> Loading required package: insight #> Loading required package: parameters #> Warning: Removed 5 rows containing missing values (geom_pointrange)."},{"path":"/reference/plot.see_compare_performance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for comparing model performances — plot.see_compare_performance","title":"Plot method for comparing model performances — plot.see_compare_performance","text":"plot() method performance::compare_performance() function.","code":""},{"path":"/reference/plot.see_compare_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for comparing model performances — plot.see_compare_performance","text":"","code":"# S3 method for see_compare_performance plot(x, size_line = 1, ...)"},{"path":"/reference/plot.see_compare_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for comparing model performances — plot.see_compare_performance","text":"x object. size_line Numeric value specifying size line geoms. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_compare_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for comparing model performances — plot.see_compare_performance","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_compare_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for comparing model performances — plot.see_compare_performance","text":"","code":"library(performance) data(iris) lm1 <- lm(Sepal.Length ~ Species, data = iris) lm2 <- lm(Sepal.Length ~ Species + Petal.Length, data = iris) lm3 <- lm(Sepal.Length ~ Species * Petal.Length, data = iris) result <- compare_performance(lm1, lm2, lm3) result #> # Comparison of Model Performance Indices #>  #> Name | Model |     AIC | AIC weights |     BIC | BIC weights |    R2 | R2 (adj.) |  RMSE | Sigma #> ------------------------------------------------------------------------------------------------ #> lm1  |    lm | 231.452 |     < 0.001 | 243.494 |     < 0.001 | 0.619 |     0.614 | 0.510 | 0.515 #> lm2  |    lm | 106.233 |       0.566 | 121.286 |       0.964 | 0.837 |     0.833 | 0.333 | 0.338 #> lm3  |    lm | 106.767 |       0.434 | 127.842 |       0.036 | 0.840 |     0.835 | 0.330 | 0.336 plot(result)"},{"path":"/reference/plot.see_effectsize_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for effect size tables — plot.see_effectsize_table","title":"Plot method for effect size tables — plot.see_effectsize_table","text":"plot() method effectsize::effectsize() function.","code":""},{"path":"/reference/plot.see_effectsize_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for effect size tables — plot.see_effectsize_table","text":"","code":"# S3 method for see_effectsize_table plot(x, ...)"},{"path":"/reference/plot.see_effectsize_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for effect size tables — plot.see_effectsize_table","text":"x object. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_effectsize_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for effect size tables — plot.see_effectsize_table","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_effectsize_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for effect size tables — plot.see_effectsize_table","text":"","code":"library(effectsize) m <- aov(mpg ~ factor(am) * factor(cyl), data = mtcars) result <- eta_squared(m) plot(result)"},{"path":"/reference/plot.see_equivalence_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","title":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","text":"plot() method bayestestR::equivalence_test() function.","code":""},{"path":"/reference/plot.see_equivalence_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","text":"","code":"# S3 method for see_equivalence_test_effectsize plot(x, ...)  # S3 method for see_equivalence_test plot(   x,   rope_color = \"#0171D3\",   rope_alpha = 0.2,   show_intercept = FALSE,   n_columns = 1,   ... )  # S3 method for see_equivalence_test_lm plot(   x,   size_point = 0.7,   rope_color = \"#0171D3\",   rope_alpha = 0.2,   show_intercept = FALSE,   n_columns = 1,   ... )"},{"path":"/reference/plot.see_equivalence_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","text":"x object. ... Arguments passed methods. rope_color Character specifying color ROPE ribbon. rope_alpha Numeric specifying transparency level ROPE ribbon. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. size_point Numeric specifying size point-geoms.","code":""},{"path":"/reference/plot.see_equivalence_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_equivalence_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for (conditional) equivalence testing — plot.see_equivalence_test_effectsize","text":"","code":"library(effectsize) m <- aov(mpg ~ factor(am) * factor(cyl), data = mtcars) result <- eta_squared(m) plot(result)"},{"path":"/reference/plot.see_estimate_contrasts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for estimating contrasts — plot.see_estimate_contrasts","title":"Plot method for estimating contrasts — plot.see_estimate_contrasts","text":"plot() method modelbased::estimate_contrasts() function.","code":""},{"path":"/reference/plot.see_estimate_contrasts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for estimating contrasts — plot.see_estimate_contrasts","text":"","code":"# S3 method for see_estimate_contrasts plot(x, data = NULL, ...)"},{"path":"/reference/plot.see_estimate_contrasts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for estimating contrasts — plot.see_estimate_contrasts","text":"x object. data original data used create object. Can statistical model. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_estimate_contrasts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for estimating contrasts — plot.see_estimate_contrasts","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_estimate_contrasts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for estimating contrasts — plot.see_estimate_contrasts","text":"","code":"# \\donttest{ if (require(\"modelbased\") && require(\"rstanarm\")) {   model <- stan_glm(Sepal.Width ~ Species, data = iris, refresh = 0)   contrasts <- estimate_contrasts(model)   means <- estimate_means(model)   plot(contrasts, means) } #> Loading required package: modelbased #> Loading required package: rstanarm #> Loading required package: Rcpp #> This is rstanarm version 2.21.1 #> - See https://mc-stan.org/rstanarm/articles/priors for changes to default priors! #> - Default priors may change, so it's safest to specify priors, even if equivalent to the defaults. #> - For execution on a local, multicore CPU with excess RAM we recommend calling #>   options(mc.cores = parallel::detectCores()) #>  #> Attaching package: ‘rstanarm’ #> The following object is masked from ‘package:parameters’: #>  #>     compare_models #> No variable was specified for contrast estimation. Selecting `contrast = \"Species\"`. #> We selected `at = c(\"Species\")`.  # }"},{"path":"/reference/plot.see_estimate_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for density estimation of posterior samples — plot.see_estimate_density","title":"Plot method for density estimation of posterior samples — plot.see_estimate_density","text":"plot() method bayestestR::estimate_density() function.","code":""},{"path":"/reference/plot.see_estimate_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for density estimation of posterior samples — plot.see_estimate_density","text":"","code":"# S3 method for see_estimate_density plot(   x,   stack = TRUE,   show_intercept = FALSE,   n_columns = 1,   priors = FALSE,   priors_alpha = 0.4,   posteriors_alpha = 0.7,   size_line = 0.9,   size_point = 2,   centrality = \"median\",   ci = 0.95,   ... )"},{"path":"/reference/plot.see_estimate_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for density estimation of posterior samples — plot.see_estimate_density","text":"x object. stack Logical. TRUE, densities plotted stacked lines. Else, densities plotted parameter among . show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. priors Logical. TRUE, prior distributions simulated (using bayestestR::simulate_prior()) added plot. priors_alpha Numeric value specifying alpha prior distributions. posteriors_alpha Numeric value specifying alpha posterior distributions. size_line Numeric value specifying size line geoms. size_point Numeric specifying size point-geoms. centrality Character specifying point-estimate (centrality index) compute. Can \"median\", \"mean\" \"MAP\". ci Numeric value probability CI (0 1) estimated. Default .95. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_estimate_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for density estimation of posterior samples — plot.see_estimate_density","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_estimate_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for density estimation of posterior samples — plot.see_estimate_density","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <<- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- estimate_density(m)   plot(result) }  # }"},{"path":"/reference/plot.see_hdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for uncertainty or credible intervals — plot.see_hdi","title":"Plot method for uncertainty or credible intervals — plot.see_hdi","text":"plot() method bayestestR::hdi() related function.","code":""},{"path":"/reference/plot.see_hdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for uncertainty or credible intervals — plot.see_hdi","text":"","code":"# S3 method for see_hdi plot(   x,   data = NULL,   show_intercept = FALSE,   show_zero = TRUE,   show_title = TRUE,   n_columns = 1,   ... )"},{"path":"/reference/plot.see_hdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for uncertainty or credible intervals — plot.see_hdi","text":"x object. data original data used create object. Can statistical model. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. show_zero Logical. TRUE, add vertical (dotted) line 0. show_title Logical. TRUE, show title plot. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_hdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for uncertainty or credible intervals — plot.see_hdi","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_hdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for uncertainty or credible intervals — plot.see_hdi","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <<- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- hdi(m)   result   plot(result) }  # }"},{"path":"/reference/plot.see_n_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","title":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","text":"plot() method parameters::n_factors() parameters::n_clusters()","code":""},{"path":"/reference/plot.see_n_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","text":"","code":"# S3 method for see_n_factors plot(x, data = NULL, type = c(\"bar\", \"line\", \"area\"), size = 1, ...)"},{"path":"/reference/plot.see_n_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","text":"x object. data original data used create object. Can statistical model. type Character vector, indicating type plot. size Depending type, numeric value specifying size bars, lines, segments. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_n_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_n_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for numbers of clusters to extract or factors to retain — plot.see_n_factors","text":"","code":"if (require(\"parameters\") && require(\"nFactors\")) {   data(mtcars)   result <- n_factors(mtcars, type = \"PCA\")   result   plot(result, type = \"line\") } #> Loading required package: nFactors #> Loading required package: lattice #>  #> Attaching package: ‘nFactors’ #> The following object is masked from ‘package:lattice’: #>  #>     parallel"},{"path":"/reference/plot.see_p_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for probability of direction — plot.see_p_direction","title":"Plot method for probability of direction — plot.see_p_direction","text":"plot() method bayestestR::p_direction() function.","code":""},{"path":"/reference/plot.see_p_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for probability of direction — plot.see_p_direction","text":"","code":"# S3 method for see_p_direction plot(   x,   data = NULL,   show_intercept = FALSE,   priors = FALSE,   priors_alpha = 0.4,   n_columns = 1,   ... )"},{"path":"/reference/plot.see_p_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for probability of direction — plot.see_p_direction","text":"x object. data original data used create object. Can statistical model. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. priors Logical. TRUE, prior distributions simulated (using bayestestR::simulate_prior()) added plot. priors_alpha Numeric value specifying alpha prior distributions. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_p_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for probability of direction — plot.see_p_direction","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_p_direction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for probability of direction — plot.see_p_direction","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <<- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- p_direction(m)   plot(result) }  # }"},{"path":"/reference/plot.see_p_significance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for practical significance — plot.see_p_significance","title":"Plot method for practical significance — plot.see_p_significance","text":"plot() method bayestestR::p_significance() function.","code":""},{"path":"/reference/plot.see_p_significance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for practical significance — plot.see_p_significance","text":"","code":"# S3 method for see_p_significance plot(   x,   data = NULL,   show_intercept = FALSE,   priors = FALSE,   priors_alpha = 0.4,   n_columns = 1,   ... )"},{"path":"/reference/plot.see_p_significance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for practical significance — plot.see_p_significance","text":"x object. data original data used create object. Can statistical model. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. priors Logical. TRUE, prior distributions simulated (using bayestestR::simulate_prior()) added plot. priors_alpha Numeric value specifying alpha prior distributions. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_p_significance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for practical significance — plot.see_p_significance","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_p_significance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for practical significance — plot.see_p_significance","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <<- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- p_significance(m)   plot(result) }  # }"},{"path":"/reference/plot.see_parameters_brms_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"plot() method parameters::model_parameters() function used brms-meta-analysis models.","code":""},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"","code":"# S3 method for see_parameters_brms_meta plot(   x,   size_point = 2,   size_line = 0.8,   size_text = 3.5,   posteriors_alpha = 0.7,   rope_alpha = 0.15,   rope_color = \"cadetblue\",   normalize_height = TRUE,   show_labels = TRUE,   ... )"},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"x object. size_point Numeric specifying size point-geoms. size_line Numeric value specifying size line geoms. size_text Numeric value specifying size text labels. posteriors_alpha Numeric value specifying alpha posterior distributions. rope_alpha Numeric specifying transparency level ROPE ribbon. rope_color Character specifying color ROPE ribbon. normalize_height Logical. TRUE, height mcmc-areas \"normalized\", avoid overlap. certain cases range posterior distribution narrow parameters, may result flat mcmc-areas. cases, set normalize_height = FALSE. show_labels Logical. TRUE, text labels displayed. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"ggplot2-object.","code":""},{"path":[]},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"colors-of-density-areas-and-errorbars","dir":"Reference","previous_headings":"","what":"Colors of density areas and errorbars","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"change colors density areas, use scale_fill_manual() named color-values, e.g. scale_fill_manual(values = c(\"Study\" = \"blue\", \"Overall\" = \"green\")). change color error bars, use scale_color_manual(values = c(\"Errorbar\" = \"red\")).","code":""},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"show-or-hide-estimates-and-ci","dir":"Reference","previous_headings":"","what":"Show or hide estimates and CI","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"Use show_labels = FALSE hide textual output estimates credible intervals.","code":""},{"path":"/reference/plot.see_parameters_brms_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for Model Parameters from Bayesian Meta-Analysis — plot.see_parameters_brms_meta","text":"","code":"if (FALSE) { if (require(\"bayestestR\") && require(\"brms\") && require(\"metafor\")) {   +     # data     data(dat.bcg)   dat <- escalc(     measure = \"RR\",     ai = tpos,     bi = tneg,     ci = cpos,     di = cneg,     data = dat.bcg   )   dat$author <- make.unique(dat$author)    # model   set.seed(123)   priors <- c(     prior(normal(0, 1), class = Intercept),     prior(cauchy(0, 0.5), class = sd)   )   model <- brm(yi | se(vi) ~ 1 + (1 | author), data = dat)    # result   mp <- model_parameters(model)   plot(mp) } }"},{"path":"/reference/plot.see_parameters_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","title":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","text":"plot() method parameters::describe_distribution() function.","code":""},{"path":"/reference/plot.see_parameters_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","text":"","code":"# S3 method for see_parameters_distribution plot(   x,   dispersion = FALSE,   dispersion_alpha = 0.3,   dispersion_color = \"#3498db\",   dispersion_style = c(\"ribbon\", \"curve\"),   size_bar = 0.7,   highlight = NULL,   highlight_color = NULL,   ... )"},{"path":"/reference/plot.see_parameters_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","text":"x object. dispersion Logical. TRUE, range dispersion variable plot added. dispersion_alpha Numeric value specifying transparency level dispersion ribbon. dispersion_color Character specifying color dispersion ribbon. dispersion_style Character describing style dispersion area. \"ribbon\" ribbon, \"curve\" normal-curve. size_bar Size bar geoms. highlight vector names categories x highlighted. highlight_color vector color values highlighted categories. remaining (non-highlighted) categories filled lighter grey. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_parameters_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_parameters_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for describing distributions of vectors — plot.see_parameters_distribution","text":"","code":"library(parameters) set.seed(333) x <- sample(1:100, 1000, replace = TRUE) result <- describe_distribution(x) result #>  Mean |    SD |   IQR |          Range | Skewness | Kurtosis |    n | n_Missing #> ------------------------------------------------------------------------------- #> 50.18 | 28.66 | 48.75 | [1.00, 100.00] |     0.02 |    -1.16 | 1000 |         0 plot(result)"},{"path":"/reference/plot.see_parameters_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for model parameters — plot.see_parameters_model","title":"Plot method for model parameters — plot.see_parameters_model","text":"plot() method parameters::model_parameters() function.","code":""},{"path":"/reference/plot.see_parameters_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for model parameters — plot.see_parameters_model","text":"","code":"# S3 method for see_parameters_model plot(   x,   show_intercept = FALSE,   size_point = 0.8,   size_text = NA,   sort = NULL,   n_columns = NULL,   type = c(\"forest\", \"funnel\"),   weight_points = TRUE,   show_labels = FALSE,   show_estimate = TRUE,   show_interval = TRUE,   show_density = FALSE,   log_scale = FALSE,   ... )  # S3 method for see_parameters_sem plot(   x,   data = NULL,   component = c(\"regression\", \"correlation\", \"loading\"),   type = component,   threshold_coefficient = NULL,   threshold_p = NULL,   ci = TRUE,   size_point = 22,   ... )"},{"path":"/reference/plot.see_parameters_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for model parameters — plot.see_parameters_model","text":"x object. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. size_point Numeric specifying size point-geoms. size_text Numeric value specifying size text labels. sort behavior argument depends plotting contexts. Plotting model parameters: NULL, coefficients plotted order appear summary. Setting sort = \"ascending\" sort = \"descending\" sorts coefficients ascending descending order, respectively. Setting sort = TRUE sort = \"ascending\". Plotting Bayes factors: Sort pie-slices posterior probability (descending)? n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. type Character indicating type plot. applies model parameters meta-analysis objects (e.g. metafor). weight_points Logical. TRUE, meta-analysis objects, point size adjusted according study-weights. show_labels Logical. TRUE, text labels displayed. show_estimate point estimate parameter shown? (default: TRUE) show_interval compatibility interval(s) parameter shown? (default: TRUE) show_density compatibility density (.e., posterior, bootstrap, confidence density) parameter shown? (default: FALSE) log_scale exponentiated coefficients (e.g., odds-ratios) plotted log scale? (default: FALSE) ... Arguments passed methods. data original data used create object. Can statistical model. component Character indicating component model plotted. threshold_coefficient Numeric, threshold value coefficients displayed. threshold_p Numeric, threshold value p-values displayed. ci Logical, whether confidence intervals added plot.","code":""},{"path":"/reference/plot.see_parameters_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for model parameters — plot.see_parameters_model","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_parameters_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for model parameters — plot.see_parameters_model","text":"","code":"library(parameters) m <- lm(mpg ~ wt + cyl + gear + disp, data = mtcars) result <- model_parameters(m) result #> Parameter   | Coefficient |   SE |         95% CI | t(27) |      p #> ------------------------------------------------------------------ #> (Intercept) |       43.54 | 4.86 | [33.57, 53.51] |  8.96 | < .001 #> wt          |       -3.79 | 1.08 | [-6.01, -1.57] | -3.51 | 0.002  #> cyl         |       -1.78 | 0.61 | [-3.04, -0.52] | -2.91 | 0.007  #> gear        |       -0.49 | 0.79 | [-2.11,  1.13] | -0.62 | 0.540  #> disp        |    6.94e-03 | 0.01 | [-0.02,  0.03] |  0.58 | 0.568  #>  #> Uncertainty intervals (equal-tailed) and p values (two-tailed) computed using a #>   Wald t-distribution approximation. plot(result)"},{"path":"/reference/plot.see_parameters_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for principal component analysis — plot.see_parameters_pca","title":"Plot method for principal component analysis — plot.see_parameters_pca","text":"plot() method parameters::principal_components() function.","code":""},{"path":"/reference/plot.see_parameters_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for principal component analysis — plot.see_parameters_pca","text":"","code":"# S3 method for see_parameters_pca plot(   x,   type = c(\"bar\", \"line\"),   size_text = 3.5,   text_color = \"black\",   size = 1,   show_labels = TRUE,   ... )"},{"path":"/reference/plot.see_parameters_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for principal component analysis — plot.see_parameters_pca","text":"x object. type Character vector, indicating type plot. size_text Numeric value specifying size text labels. text_color Character specifying color text labels. size Depending type, numeric value specifying size bars, lines, segments. show_labels Logical. TRUE, text labels displayed. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_parameters_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for principal component analysis — plot.see_parameters_pca","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_parameters_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for principal component analysis — plot.see_parameters_pca","text":"","code":"library(parameters) data(mtcars) result <- principal_components(mtcars[, 1:7], n = \"all\", threshold = 0.2) result #> # Loadings from Principal Component Analysis (no rotation) #>  #> Variable |  PC1  |  PC2  | PC3  |  PC4  | PC5  |  PC6  | Complexity #> ------------------------------------------------------------------- #> mpg      | -0.93 |       |      | -0.30 |      |       |    1.30    #> cyl      | 0.96  |       |      |       |      | -0.21 |    1.18    #> disp     | 0.95  |       |      | -0.23 |      |       |    1.16    #> hp       | 0.87  | 0.36  |      |       | 0.30 |       |    1.64    #> drat     | -0.75 | 0.48  | 0.44 |       |      |       |    2.47    #> wt       | 0.88  | -0.35 | 0.26 |       |      |       |    1.54    #> qsec     | -0.54 | -0.81 |      |       |      |       |    1.96    #>  #> The 6 principal components accounted for 99.30% of the total variance of the original data (PC1 = 72.66%, PC2 = 16.52%, PC3 = 4.93%, PC4 = 2.26%, PC5 = 1.85%, PC6 = 1.08%). #>  plot(result) #> Warning: Removed 25 rows containing missing values (position_stack). #> Warning: Removed 25 rows containing missing values (geom_text)."},{"path":"/reference/plot.see_parameters_simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for simulated model parameters — plot.see_parameters_simulate","title":"Plot method for simulated model parameters — plot.see_parameters_simulate","text":"plot() method parameters::simulate_parameters() function.","code":""},{"path":"/reference/plot.see_parameters_simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for simulated model parameters — plot.see_parameters_simulate","text":"","code":"# S3 method for see_parameters_simulate plot(   x,   data = NULL,   stack = TRUE,   show_intercept = FALSE,   n_columns = NULL,   normalize_height = FALSE,   size_line = 0.9,   posteriors_alpha = 0.7,   centrality = \"median\",   ci = 0.95,   ... )"},{"path":"/reference/plot.see_parameters_simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for simulated model parameters — plot.see_parameters_simulate","text":"x object. data original data used create object. Can statistical model. stack Logical. TRUE, densities plotted stacked lines. Else, densities plotted parameter among . show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. normalize_height Logical. TRUE, height density-areas \"normalized\", avoid overlap. certain cases range distribution simulated draws narrow parameters, may result flat density-areas. cases, set normalize_height = FALSE. size_line Numeric value specifying size line geoms. posteriors_alpha Numeric value specifying alpha posterior distributions. centrality Character specifying point-estimate (centrality index) compute. Can \"median\", \"mean\" \"MAP\". ci Numeric value probability CI (0 1) estimated. Default .95. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_parameters_simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for simulated model parameters — plot.see_parameters_simulate","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_parameters_simulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for simulated model parameters — plot.see_parameters_simulate","text":"","code":"library(parameters) m <- lm(mpg ~ wt + cyl + gear, data = mtcars) result <- simulate_parameters(m) result #> # Fixed Effects #>  #> Parameter   | Coefficient |         95% CI |      p #> --------------------------------------------------- #> (Intercept) |       42.19 | [33.75, 51.65] | < .001 #> wt          |       -3.39 | [-4.99, -1.75] | < .001 #> cyl         |       -1.54 | [-2.40, -0.70] | < .001 #> gear        |       -0.47 | [-2.11,  1.07] | 0.532  plot(result) #> Error in MASS::mvrnorm(n = iterations, mu = beta, Sigma = varcov): incompatible arguments"},{"path":"/reference/plot.see_performance_roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for ROC curves — plot.see_performance_roc","title":"Plot method for ROC curves — plot.see_performance_roc","text":"plot() method performance::performance_roc() function.","code":""},{"path":"/reference/plot.see_performance_roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for ROC curves — plot.see_performance_roc","text":"","code":"# S3 method for see_performance_roc plot(x, ...)"},{"path":"/reference/plot.see_performance_roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for ROC curves — plot.see_performance_roc","text":"x object. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_performance_roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for ROC curves — plot.see_performance_roc","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_performance_roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for ROC curves — plot.see_performance_roc","text":"","code":"library(performance) data(iris) set.seed(123) iris$y <- rbinom(nrow(iris), size = 1, .3)  folds <- sample(nrow(iris), size = nrow(iris) / 8, replace = FALSE) test_data <- iris[folds, ] train_data <- iris[-folds, ]  model <- glm(y ~ Sepal.Length + Sepal.Width, data = train_data, family = \"binomial\") result <- performance_roc(model, new_data = test_data) result #> AUC: 37.66% plot(result)"},{"path":"/reference/plot.see_point_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for point estimates of posterior samples — plot.see_point_estimate","title":"Plot method for point estimates of posterior samples — plot.see_point_estimate","text":"plot() method bayestestR::point_estimate().","code":""},{"path":"/reference/plot.see_point_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for point estimates of posterior samples — plot.see_point_estimate","text":"","code":"# S3 method for see_point_estimate plot(   x,   data = NULL,   size_point = 2,   size_text = 3.5,   panel = TRUE,   show_labels = TRUE,   show_intercept = FALSE,   priors = FALSE,   priors_alpha = 0.4,   ... )"},{"path":"/reference/plot.see_point_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for point estimates of posterior samples — plot.see_point_estimate","text":"x object. data original data used create object. Can statistical model. size_point Numeric specifying size point-geoms. size_text Numeric value specifying size text labels. panel Logical, TRUE, plots arranged panels; else, single plots returned. show_labels Logical. TRUE, text labels point estimates (.e. \"Mean\", \"Median\" /\"MAP\") shown. may set show_labels = FALSE case overlapping labels, add legend footnote plot. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. priors Logical. TRUE, prior distributions simulated (using bayestestR::simulate_prior()) added plot. priors_alpha Numeric value specifying alpha prior distributions. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_point_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for point estimates of posterior samples — plot.see_point_estimate","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_point_estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for point estimates of posterior samples — plot.see_point_estimate","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- point_estimate(m, centrality = \"median\")   result   plot(result) }  # }"},{"path":"/reference/plot.see_rope.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for Region of Practical Equivalence — plot.see_rope","title":"Plot method for Region of Practical Equivalence — plot.see_rope","text":"plot() method bayestestR::rope().","code":""},{"path":"/reference/plot.see_rope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for Region of Practical Equivalence — plot.see_rope","text":"","code":"# S3 method for see_rope plot(   x,   data = NULL,   rope_alpha = 0.5,   rope_color = \"cadetblue\",   show_intercept = FALSE,   n_columns = 1,   ... )"},{"path":"/reference/plot.see_rope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for Region of Practical Equivalence — plot.see_rope","text":"x object. data original data used create object. Can statistical model. rope_alpha Numeric specifying transparency level ROPE ribbon. rope_color Character specifying color ROPE ribbon. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. n_columns models multiple components (like fixed random, count zero-inflated), defines number columns panel-layout. NULL, single, integrated plot shown. ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_rope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for Region of Practical Equivalence — plot.see_rope","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_rope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for Region of Practical Equivalence — plot.see_rope","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- rope(m)   result   plot(result) } #> Possible multicollinearity between Petal.Width:Speciesversicolor and Petal.Width (r = 0.86), Petal.Width:Speciesversicolor and Speciesversicolor (r = 0.7), Petal.Width:Speciesvirginica and Petal.Width:Speciesversicolor (r = 0.79). This might lead to inappropriate results. See 'Details' in '?rope'.  # }"},{"path":"/reference/plot.see_si.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for support intervals — plot.see_si","title":"Plot method for support intervals — plot.see_si","text":"plot() method bayestestR::si().","code":""},{"path":"/reference/plot.see_si.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for support intervals — plot.see_si","text":"","code":"# S3 method for see_si plot(   x,   si_color = \"#0171D3\",   si_alpha = 0.2,   show_intercept = FALSE,   support_only = FALSE,   ... )"},{"path":"/reference/plot.see_si.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for support intervals — plot.see_si","text":"x object. si_color Character specifying color SI ribbon. si_alpha Numeric value specifying Transparency level SI ribbon. show_intercept Logical, TRUE, intercept-parameter included plot. default, hidden many cases intercept-parameter posterior distribution different location, density curves posterior distributions parameters hardly visible. support_only Logical. Decides whether plot support data, show \"raw\" prior posterior distributions? applies plotting bayestestR::si(). ... Arguments passed methods.","code":""},{"path":"/reference/plot.see_si.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for support intervals — plot.see_si","text":"ggplot2-object.","code":""},{"path":"/reference/plot.see_si.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for support intervals — plot.see_si","text":"","code":"# \\donttest{ if (require(\"bayestestR\") && require(\"rstanarm\")) {   set.seed(123)   m <- stan_glm(Sepal.Length ~ Petal.Width * Species, data = iris, refresh = 0)   result <- si(m)   result   plot(result) } #> Sampling priors, please wait...  # }"},{"path":"/reference/plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple plots side by side — plots","title":"Multiple plots side by side — plots","text":"wrapper around patchwork plot multiple figures side side page. See patchwork documentation advanced control plot layouts.","code":""},{"path":"/reference/plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple plots side by side — plots","text":"","code":"plots(   ...,   n_rows = NULL,   n_columns = NULL,   guides = NULL,   tags = FALSE,   tag_prefix = NULL,   tag_suffix = NULL,   tag_sep = NULL,   title = NULL,   subtitle = NULL,   caption = NULL,   theme = NULL )"},{"path":"/reference/plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple plots side by side — plots","text":"... Multiple ggplots list containing ggplot objects n_rows Number rows align plots. n_columns Number columns align plots. guides string specifying guides treated layout. 'collect' collect shared guides across plots, removing duplicates. 'keep' keep guides alongside plot. 'auto' inherit higher patchwork level (). See patchwork::plot_layout() details. tags Add tags subfigures. Can NULL omit (default) character vector containing tags plot. Automatic tags can also generated '1' Arabic numerals, '' uppercase Latin letters, '' lowercase Latin letters, '' uppercase Roman numerals, '' lowercase Roman numerals. backwards compatibility, can also FALSE (equivalent NULL), NA (equivalent NULL), TRUE (equivalent ''). tag_prefix, tag_suffix Text strings appear tag. tag_sep Text string giving separator use different tag levels. title, subtitle, caption Text strings use various plot annotations add composed patchwork. theme ggplot theme specification use plot. elements related titles, caption, tags, well plot margin background, used.","code":""},{"path":"/reference/plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple plots side by side — plots","text":"","code":"library(ggplot2) library(see)  p1 <- ggplot(mtcars, aes(x = disp, y = mpg)) +   geom_point() p2 <- ggplot(mtcars, aes(x = mpg)) +   geom_density() p3 <- ggplot(mtcars, aes(x = factor(cyl))) +   geom_bar() +   scale_x_discrete(\"cyl\")  plots(p1, p2)  plots(p1, p2, n_columns = 2, tags = \"A\")  plots(   p1, p2, p3,   n_columns = 1, tags = c(\"Fig. 1\", \"Fig. 2\", \"Fig. 3\"),   title = \"The surprising truth about mtcars\" )"},{"path":"/reference/print.see_performance_pp_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for posterior predictive checks — print.see_performance_pp_check","title":"Plot method for posterior predictive checks — print.see_performance_pp_check","text":"plot() method performance::check_predictions() function.","code":""},{"path":"/reference/print.see_performance_pp_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for posterior predictive checks — print.see_performance_pp_check","text":"","code":"# S3 method for see_performance_pp_check print(   x,   size_line = 0.7,   line_alpha = 0.25,   size_bar = 0.7,   style = theme_lucid,   ... )  # S3 method for see_performance_pp_check plot(   x,   size_line = 0.7,   line_alpha = 0.25,   size_bar = 0.7,   style = theme_lucid,   ... )"},{"path":"/reference/print.see_performance_pp_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for posterior predictive checks — print.see_performance_pp_check","text":"x object. size_line Numeric value specifying size line geoms. line_alpha Numeric value specifying alpha lines indicating yrep. size_bar Size bar geoms. style ggplot2-theme. ... Arguments passed methods.","code":""},{"path":"/reference/print.see_performance_pp_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for posterior predictive checks — print.see_performance_pp_check","text":"ggplot2-object.","code":""},{"path":"/reference/print.see_performance_pp_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for posterior predictive checks — print.see_performance_pp_check","text":"","code":"if (require(\"performance\")) {   model <- lm(Sepal.Length ~ Species * Petal.Width + Petal.Length, data = iris)   check_posterior_predictions(model) }"},{"path":"/reference/scale_color_bluebrown.html","id":null,"dir":"Reference","previous_headings":"","what":"Blue-brown color palette — scale_color_bluebrown","title":"Blue-brown color palette — scale_color_bluebrown","text":"blue-brown color palette. Use scale_color_bluebrown_d() discrete categories scale_color_bluebrown_c() continuous scale.","code":""},{"path":"/reference/scale_color_bluebrown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blue-brown color palette — scale_color_bluebrown","text":"","code":"scale_color_bluebrown(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_bluebrown_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_bluebrown_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_bluebrown(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_colour_bluebrown_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_bluebrown_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_bluebrown(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_bluebrown_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_bluebrown_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )"},{"path":"/reference/scale_color_bluebrown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blue-brown color palette — scale_color_bluebrown","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_bluebrown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blue-brown color palette — scale_color_bluebrown","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_bluebrown_d()"},{"path":"/reference/scale_color_flat.html","id":null,"dir":"Reference","previous_headings":"","what":"Flat UI color palette — scale_color_flat","title":"Flat UI color palette — scale_color_flat","text":"palette based Flat UI. Use scale_color_flat_d discrete categories scale_color_flat_c continuous scale.","code":""},{"path":"/reference/scale_color_flat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flat UI color palette — scale_color_flat","text":"","code":"scale_color_flat(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_color_flat_d(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_color_flat_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_flat(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_colour_flat_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_flat_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_flat(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_flat_d(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_flat_c(palette = \"contrast\", discrete = FALSE, reverse = FALSE, ...)"},{"path":"/reference/scale_color_flat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flat UI color palette — scale_color_flat","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments passed discrete_scale() scale_color_gradientn(), used respectively discrete TRUE FALSE.","code":""},{"path":"/reference/scale_color_flat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flat UI color palette — scale_color_flat","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_flat_d()   ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violin() +   theme_modern() +   scale_fill_flat_d(palette = \"ice\")   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_flat_c(palette = \"rainbow\")"},{"path":"/reference/scale_color_material.html","id":null,"dir":"Reference","previous_headings":"","what":"Material design color palette — scale_color_material","title":"Material design color palette — scale_color_material","text":"palette based material design colors. Use scale_color_material_d() discrete categories scale_color_material_c() continuous scale.","code":""},{"path":"/reference/scale_color_material.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Material design color palette — scale_color_material","text":"","code":"scale_color_material(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_material_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_material_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_material(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_colour_material_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_material_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_material(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_material_d(   palette = \"contrast\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_material_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )"},{"path":"/reference/scale_color_material.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Material design color palette — scale_color_material","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_material.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Material design color palette — scale_color_material","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_material_d()   ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violin() +   theme_modern() +   scale_fill_material_d(palette = \"ice\")   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_material_c(palette = \"rainbow\")"},{"path":"/reference/scale_color_metro.html","id":null,"dir":"Reference","previous_headings":"","what":"Metro color palette — scale_color_metro","title":"Metro color palette — scale_color_metro","text":"palette based Metro Metro colors. Use scale_color_metro_d discrete categories scale_color_metro_c continuous scale.","code":""},{"path":"/reference/scale_color_metro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metro color palette — scale_color_metro","text":"","code":"scale_color_metro(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_metro_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_metro_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_metro(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_colour_metro_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_metro_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_metro(palette = \"complement\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_metro_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_metro_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )"},{"path":"/reference/scale_color_metro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metro color palette — scale_color_metro","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_metro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metro color palette — scale_color_metro","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_metro_d()   ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violin() +   theme_modern() +   scale_fill_metro_d(palette = \"ice\")   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_metro_c(palette = \"rainbow\")"},{"path":"/reference/scale_color_pizza.html","id":null,"dir":"Reference","previous_headings":"","what":"Pizza color palette — scale_color_pizza","title":"Pizza color palette — scale_color_pizza","text":"palette based authentic neapolitan pizzas. Use scale_color_pizza_d() discrete categories scale_color_pizza_c() continuous scale.","code":""},{"path":"/reference/scale_color_pizza.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pizza color palette — scale_color_pizza","text":"","code":"scale_color_pizza(   palette = \"margherita\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_pizza_d(   palette = \"margherita\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_pizza_c(   palette = \"margherita\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_pizza(   palette = \"margherita\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_colour_pizza_c(   palette = \"margherita\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_pizza_d(   palette = \"margherita\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_pizza(palette = \"margherita\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_pizza_d(   palette = \"margherita\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_pizza_c(   palette = \"margherita\",   discrete = FALSE,   reverse = FALSE,   ... )"},{"path":"/reference/scale_color_pizza.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pizza color palette — scale_color_pizza","text":"palette Pizza type. Can \"margherita\" (default), \"margherita_crust\", \"diavola\" \"diavola_crust\". discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_pizza.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pizza color palette — scale_color_pizza","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_pizza_d()   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_pizza_c()"},{"path":"/reference/scale_color_see.html","id":null,"dir":"Reference","previous_headings":"","what":"See color palette — scale_color_see","title":"See color palette — scale_color_see","text":"See color palette. Use scale_color_see_d() discrete categories scale_color_see_c() continuous scale.","code":""},{"path":"/reference/scale_color_see.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See color palette — scale_color_see","text":"","code":"scale_color_see(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_color_see_d(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_color_see_c(palette = \"contrast\", discrete = FALSE, reverse = FALSE, ...)  scale_colour_see(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_colour_see_c(   palette = \"contrast\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_see_d(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_see(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_see_d(palette = \"contrast\", discrete = TRUE, reverse = FALSE, ...)  scale_fill_see_c(palette = \"contrast\", discrete = FALSE, reverse = FALSE, ...)"},{"path":"/reference/scale_color_see.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See color palette — scale_color_see","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_see.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See color palette — scale_color_see","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_see_d()   ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() +   theme_abyss() +   scale_colour_see(palette = \"light\")   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_see_c(palette = \"rainbow\")"},{"path":"/reference/scale_color_social.html","id":null,"dir":"Reference","previous_headings":"","what":"Social color palette — scale_color_social","title":"Social color palette — scale_color_social","text":"palette based Social colors. Use scale_color_social_d discrete categories scale_color_social_c continuous scale.","code":""},{"path":"/reference/scale_color_social.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Social color palette — scale_color_social","text":"","code":"scale_color_social(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_social_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_color_social_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_social(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_colour_social_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )  scale_colour_social_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_social(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_social_d(   palette = \"complement\",   discrete = TRUE,   reverse = FALSE,   ... )  scale_fill_social_c(   palette = \"complement\",   discrete = FALSE,   reverse = FALSE,   ... )"},{"path":"/reference/scale_color_social.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Social color palette — scale_color_social","text":"palette Character name palette. Depending color scale, can \"full\", \"ice\", \"rainbow\", \"complement\", \"contrast\" \"light\" (dark themes). discrete Boolean indicating whether color aesthetic discrete . reverse Boolean indicating whether palette reversed. ... Additional arguments pass colorRampPalette().","code":""},{"path":"/reference/scale_color_social.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Social color palette — scale_color_social","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_boxplot() +   theme_modern() +   scale_fill_social_d()   ggplot(iris, aes(x = Species, y = Sepal.Length, fill = Species)) +   geom_violin() +   theme_modern() +   scale_fill_social_d(palette = \"ice\")   ggplot(iris, aes(x = Petal.Length, y = Petal.Width, color = Sepal.Length)) +   geom_point() +   theme_modern() +   scale_color_social_c(palette = \"rainbow\")"},{"path":"/reference/see_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract See colors as hex codes — see_colors","title":"Extract See colors as hex codes — see_colors","text":"Can used get hex code specific colors See color palette. Use see_colors() see available color.","code":""},{"path":"/reference/see_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract See colors as hex codes — see_colors","text":"","code":"see_colors(...)"},{"path":"/reference/see_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract See colors as hex codes — see_colors","text":"... Character names colors.","code":""},{"path":"/reference/see_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract See colors as hex codes — see_colors","text":"character vector color-codes.","code":""},{"path":"/reference/see_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract See colors as hex codes — see_colors","text":"","code":"see_colors() #>         red        pink      purple deep purple      indigo        blue  #>   \"#d32626\"   \"#b5076b\"   \"#5c2a9d\"   \"#45046a\"   \"#303960\"   \"#1b6ca8\"  #>  light blue        cyan       green light green        lime      yellow  #>   \"#03A9F4\"   \"#0a97b0\"   \"#438a5e\"   \"#bac964\"   \"#f7fbe1\"   \"#fbd46d\"  #>       amber      orange        grey   blue grey  #>   \"#ff9c71\"   \"#fb7813\"   \"#e7dfd5\"   \"#3b6978\"   see_colors(\"indigo\", \"lime\") #>    indigo      lime  #> \"#303960\" \"#f7fbe1\""},{"path":"/reference/social_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Social colors as hex codes — social_colors","title":"Extract Social colors as hex codes — social_colors","text":"Can used get hex code specific colors Social color palette. Use social_colors() see available color.","code":""},{"path":"/reference/social_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Social colors as hex codes — social_colors","text":"","code":"social_colors(...)"},{"path":"/reference/social_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Social colors as hex codes — social_colors","text":"... Character names colors.","code":""},{"path":"/reference/social_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Social colors as hex codes — social_colors","text":"character vector color-codes.","code":""},{"path":"/reference/social_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Social colors as hex codes — social_colors","text":"","code":"social_colors() #>         red    dark red      purple deep purple        blue  light blue  #>   \"#cd201f\"   \"#b92b27\"   \"#ea4c89\"   \"#410093\"   \"#0077B5\"   \"#55acee\"  #>        cyan        teal       green light green      yellow       amber  #>   \"#1ab7ea\"   \"#00b489\"   \"#3aaf85\"   \"#25D366\"   \"#FFFC00\"   \"#f57d00\"  #>      orange deep orange        grey   blue grey  #>   \"#ff6600\"   \"#ff3300\"   \"#34465d\"   \"#21759b\"   social_colors(\"dark red\", \"teal\") #>  dark red      teal  #> \"#b92b27\" \"#00b489\""},{"path":"/reference/theme_abyss.html","id":null,"dir":"Reference","previous_headings":"","what":"Abyss theme — theme_abyss","title":"Abyss theme — theme_abyss","text":"deep dark blue theme ggplot.","code":""},{"path":"/reference/theme_abyss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abyss theme — theme_abyss","text":"","code":"theme_abyss(   base_size = 11,   base_family = \"\",   plot.title.size = 15,   plot.title.face = \"plain\",   plot.title.space = 20,   plot.title.position = \"plot\",   legend.position = \"right\",   axis.title.space = 20,   legend.title.size = 13,   legend.text.size = 12,   axis.title.size = 13,   axis.title.face = \"plain\",   axis.text.size = 12,   axis.text.angle = NULL,   tags.size = 15,   tags.face = \"bold\" )"},{"path":"/reference/theme_abyss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abyss theme — theme_abyss","text":"base_size base font size, given pts. base_family base font family plot.title.size Title size pts. Can \"none\". plot.title.face Title font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). plot.title.space Title spacing. plot.title.position Alignment plot title/subtitle caption. setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector) axis.title.space Axis title spacing. legend.title.size Legend elements text size pts. legend.text.size Legend elements text size pts. Can \"none\". axis.title.size Axis title text size pts. axis.title.face Axis font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis.text.size Axis text size pts. axis.text.angle Rotate  x axis labels. tags.size Tags text size pts. tags.face Tags font face (\"plain\", \"italic\", \"bold\", \"bold.italic\").","code":""},{"path":"/reference/theme_abyss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abyss theme — theme_abyss","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +   geom_point(color = \"white\") +   theme_abyss()"},{"path":"/reference/theme_blackboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Blackboard dark theme — theme_blackboard","title":"Blackboard dark theme — theme_blackboard","text":"modern, sleek dark theme ggplot.","code":""},{"path":"/reference/theme_blackboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blackboard dark theme — theme_blackboard","text":"","code":"theme_blackboard(   base_size = 11,   base_family = \"\",   plot.title.size = 15,   plot.title.face = \"plain\",   plot.title.space = 20,   plot.title.position = \"plot\",   legend.position = \"right\",   axis.title.space = 20,   legend.title.size = 13,   legend.text.size = 12,   axis.title.size = 13,   axis.title.face = \"plain\",   axis.text.size = 12,   axis.text.angle = NULL,   tags.size = 15,   tags.face = \"bold\" )"},{"path":"/reference/theme_blackboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blackboard dark theme — theme_blackboard","text":"base_size base font size, given pts. base_family base font family plot.title.size Title size pts. Can \"none\". plot.title.face Title font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). plot.title.space Title spacing. plot.title.position Alignment plot title/subtitle caption. setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector) axis.title.space Axis title spacing. legend.title.size Legend elements text size pts. legend.text.size Legend elements text size pts. Can \"none\". axis.title.size Axis title text size pts. axis.title.face Axis font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis.text.size Axis text size pts. axis.text.angle Rotate  x axis labels. tags.size Tags text size pts. tags.face Tags font face (\"plain\", \"italic\", \"bold\", \"bold.italic\").","code":""},{"path":"/reference/theme_blackboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blackboard dark theme — theme_blackboard","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +   geom_point(color = \"white\") +   theme_blackboard()"},{"path":"/reference/theme_lucid.html","id":null,"dir":"Reference","previous_headings":"","what":"Lucid theme — theme_lucid","title":"Lucid theme — theme_lucid","text":"light, clear theme ggplot.","code":""},{"path":"/reference/theme_lucid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lucid theme — theme_lucid","text":"","code":"theme_lucid(   base_size = 11,   base_family = \"\",   plot.title.size = 12,   plot.title.face = \"plain\",   plot.title.space = 15,   plot.title.position = \"plot\",   legend.position = \"right\",   axis.title.space = 10,   legend.title.size = 11,   legend.text.size = 10,   axis.title.size = 11,   axis.title.face = \"plain\",   axis.text.size = 10,   axis.text.angle = NULL,   tags.size = 11,   tags.face = \"plain\" )"},{"path":"/reference/theme_lucid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lucid theme — theme_lucid","text":"base_size base font size, given pts. base_family base font family plot.title.size Title size pts. Can \"none\". plot.title.face Title font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). plot.title.space Title spacing. plot.title.position Alignment plot title/subtitle caption. setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector) axis.title.space Axis title spacing. legend.title.size Legend elements text size pts. legend.text.size Legend elements text size pts. Can \"none\". axis.title.size Axis title text size pts. axis.title.face Axis font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis.text.size Axis text size pts. axis.text.angle Rotate  x axis labels. tags.size Tags text size pts. tags.face Tags font face (\"plain\", \"italic\", \"bold\", \"bold.italic\").","code":""},{"path":"/reference/theme_lucid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lucid theme — theme_lucid","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length)) +   geom_point(color = \"white\") +   theme_lucid()"},{"path":"/reference/theme_modern.html","id":null,"dir":"Reference","previous_headings":"","what":"The easystats' minimal theme — theme_modern","title":"The easystats' minimal theme — theme_modern","text":"modern, sleek elegant theme ggplot.","code":""},{"path":"/reference/theme_modern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The easystats' minimal theme — theme_modern","text":"","code":"theme_modern(   base_size = 11,   base_family = \"\",   plot.title.size = 15,   plot.title.face = \"plain\",   plot.title.space = 20,   plot.title.position = \"plot\",   legend.position = \"right\",   axis.title.space = 20,   legend.title.size = 13,   legend.text.size = 12,   axis.title.size = 13,   axis.title.face = \"plain\",   axis.text.size = 12,   axis.text.angle = NULL,   tags.size = 15,   tags.face = \"bold\" )"},{"path":"/reference/theme_modern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The easystats' minimal theme — theme_modern","text":"base_size base font size, given pts. base_family base font family plot.title.size Title size pts. Can \"none\". plot.title.face Title font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). plot.title.space Title spacing. plot.title.position Alignment plot title/subtitle caption. setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector) axis.title.space Axis title spacing. legend.title.size Legend elements text size pts. legend.text.size Legend elements text size pts. Can \"none\". axis.title.size Axis title text size pts. axis.title.face Axis font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis.text.size Axis text size pts. axis.text.angle Rotate  x axis labels. tags.size Tags text size pts. tags.face Tags font face (\"plain\", \"italic\", \"bold\", \"bold.italic\").","code":""},{"path":"/reference/theme_modern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The easystats' minimal theme — theme_modern","text":"","code":"library(ggplot2) library(see)  ggplot(iris, aes(x = Sepal.Width, y = Sepal.Length, color = Species)) +   geom_point() +   theme_modern()"},{"path":"/reference/theme_radar.html","id":null,"dir":"Reference","previous_headings":"","what":"Themes for radar plots — theme_radar","title":"Themes for radar plots — theme_radar","text":"theme_radar() light, clear theme ggplot radar-plots, theme_radar_dark() dark variant theme_radar().","code":""},{"path":"/reference/theme_radar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Themes for radar plots — theme_radar","text":"","code":"theme_radar(   base_size = 11,   base_family = \"\",   plot.title.size = 12,   plot.title.face = \"plain\",   plot.title.space = 15,   plot.title.position = \"plot\",   legend.position = \"right\",   axis.title.space = 15,   legend.title.size = 11,   legend.text.size = 10,   axis.title.size = 11,   axis.title.face = \"plain\",   axis.text.size = 10,   axis.text.angle = NULL,   tags.size = 11,   tags.face = \"plain\" )  theme_radar_dark(   base_size = 11,   base_family = \"\",   plot.title.size = 12,   plot.title.face = \"plain\",   plot.title.space = 15,   legend.position = \"right\",   axis.title.space = 15,   legend.title.size = 11,   legend.text.size = 10,   axis.title.size = 11,   axis.title.face = \"plain\",   axis.text.size = 10,   axis.text.angle = NULL,   tags.size = 11,   tags.face = \"plain\" )"},{"path":"/reference/theme_radar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Themes for radar plots — theme_radar","text":"base_size base font size, given pts. base_family base font family plot.title.size Title size pts. Can \"none\". plot.title.face Title font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). plot.title.space Title spacing. plot.title.position Alignment plot title/subtitle caption. setting plot.title.position applies title subtitle. value \"panel\" (default) means titles /caption aligned plot panels. value \"plot\" means titles /caption aligned entire plot (minus space margins plot tag). legend.position position legends (\"none\", \"left\", \"right\", \"bottom\", \"top\", two-element numeric vector) axis.title.space Axis title spacing. legend.title.size Legend elements text size pts. legend.text.size Legend elements text size pts. Can \"none\". axis.title.size Axis title text size pts. axis.title.face Axis font face (\"plain\", \"italic\", \"bold\", \"bold.italic\"). axis.text.size Axis text size pts. axis.text.angle Rotate  x axis labels. tags.size Tags text size pts. tags.face Tags font face (\"plain\", \"italic\", \"bold\", \"bold.italic\").","code":""},{"path":[]},{"path":"/reference/theme_radar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Themes for radar plots — theme_radar","text":"","code":"if (require(\"ggplot2\") && require(\"poorman\") && require(\"tidyr\")) {   data <- iris %>%     group_by(Species) %>%     summarise(across(everything(), mean)) %>%     pivot_longer(-Species)    data %>%     ggplot(aes(       x = name,       y = value,       color = Species,       group = Species,       fill = Species     )) +     geom_polygon(size = 1, alpha = .1) +     coord_radar() +     theme_radar() }"},{"path":"/news/index.html","id":"see-0610","dir":"Changelog","previous_headings":"","what":"see 0.6.10","title":"see 0.6.10","text":"Improved plotting performance::check_model(): using appropriate plots binomial models redundant density-plot normality-checks replaced posterior predictive check plot.","code":""},{"path":"/news/index.html","id":"see-069","dir":"Changelog","previous_headings":"","what":"see 0.6.9","title":"see 0.6.9","text":"CRAN release: 2022-02-15 Minor changes catch changes easystats-packages.","code":""},{"path":"/news/index.html","id":"see-068","dir":"Changelog","previous_headings":"","what":"see 0.6.8","title":"see 0.6.8","text":"CRAN release: 2021-10-03","code":""},{"path":"/news/index.html","id":"new-features-0-6-8","dir":"Changelog","previous_headings":"","what":"New features","title":"see 0.6.8","text":"Add option show density layers Bayesian bootstrapped models plot() parameters::model_parameters(). Negative coefficients plot() parameters::model_parameters() now always red. Improve support parameters::model_parameters() emmeans objects. Updated code examples work new API decisions made performance package.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.8","text":"Fix density plots frequentist models.","code":""},{"path":[]},{"path":"/news/index.html","id":"general-0-6-5","dir":"Changelog","previous_headings":"","what":"General","title":"see 0.6.5","text":"check_model() function now uses patchwork instead gridExtra arrange plots grid. Reduced/removed package dependencies. Revise plot() bayestestR::bayesfactor() meet forthcoming changes bayestestR package.","code":""},{"path":"/news/index.html","id":"new-features-0-6-5","dir":"Changelog","previous_headings":"","what":"New features","title":"see 0.6.5","text":"New functions geom_from_list geoms_from_list create geoms lists. Plotting normality check now supported afex_aov models.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.5","text":"Fixed issue argument show_intercept longer ignored plot() rope().","code":""},{"path":"/news/index.html","id":"see-063","dir":"Changelog","previous_headings":"","what":"see 0.6.3","title":"see 0.6.3","text":"CRAN release: 2021-04-09","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-6-3","dir":"Changelog","previous_headings":"","what":"New plot functions","title":"see 0.6.3","text":"Added plot-function parameters::compare_parameters(). Added option detrend QQ/PP plots.","code":""},{"path":"/news/index.html","id":"changes-0-6-3","dir":"Changelog","previous_headings":"","what":"changes","title":"see 0.6.3","text":"Plot SEM models now arrows pointing latent variables towards manifest variables. plot() method check_model() revised now consistent regarding titles subtitles, well color schemes plot order. Furthermore, plot influential observation changed order better catch potential influential observations. check_heteroscedasticity() plot contains dashed horizontal line, makes assess homoscedasticity assumption. y-axis label check_collinearity() plot clarifies measure plotted VIF. unclear plot embedded grid plots check_model() containing multiple checks. Plotting methods performance_roc() performance_accuracy() show correct labels now.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.3","text":"Fixed issue wrong labelling CI-levels plot.see_hdi(). Fixed minor issues due breaking changes easystats-packages.","code":""},{"path":"/news/index.html","id":"see-062","dir":"Changelog","previous_headings":"","what":"see 0.6.2","title":"see 0.6.2","text":"CRAN release: 2021-02-04","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-6-2","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.6.2","text":"plot() performance::check_normality() gains alpha-argument, change alpha-level confidence bands. ... argument geom_violindot() now also passed geom_violinhalf(), allowing, e.g., change alpha value violin-geoms well. Reorganized order arguments geom_violindot(), aesthetics arguments like fill absorbed partial matching arguments like fill_dots.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.2","text":"plot() performance::check_normality() shows accurate QQ-plots. plot() performance::check_normality() show correct confidence bands QQ- PP-plots (qqplotr). Previous bands extremely narrow!","code":""},{"path":"/news/index.html","id":"see-061","dir":"Changelog","previous_headings":"","what":"see 0.6.1","title":"see 0.6.1","text":"CRAN release: 2020-12-06","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-6-1","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.6.1","text":"plot() parameters::model_parameters() now supports models package metaBMA plot() parameters::model_parameters() gains weight_points argument, adjust point-size depending study-weights meta-analysis models. plot() parameters::model_parameters() now labels x-axis depending model-type (.e. “Odds Ratio” instead “Exp(Estimate)”) information available.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.1","text":"Minor fix plot() parameters::model_parameters() brmsfit models.","code":""},{"path":"/news/index.html","id":"see-060","dir":"Changelog","previous_headings":"","what":"see 0.6.0","title":"see 0.6.0","text":"CRAN release: 2020-09-13","code":""},{"path":"/news/index.html","id":"breaking-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"see 0.6.0","text":"Harmonized spelling arguments. Formerly, text_size size_text, just size even context text labels. now tried harmonize kind arguments gain consistency throughout different plot() methods.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-6-0","dir":"Changelog","previous_headings":"","what":"New plot functions","title":"see 0.6.0","text":"Added plot-function parameters::model_parameters() brms-meta-analysis models. Added plot-function performance::pp_check().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-6-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.6.0","text":"plot() parameters::model_parameters() gains size_text-argument, add text values estimates confidence intervals plot (see also vignette). plot() parameters::model_parameters() meta-analysis models (e.g. metafor) gains type argument, create funnel plots type = \"funnel\". plot() bayestestR::estimate_density() parameters::simulate_parameters() revised, now also include point-estimate error bar. Therefore, arguments centrality ci added.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.6.0","text":"Fixed bug plot.model_parameters() standardize \"basic\", \"smart\" \"posthoc\". Fixed wrong axis labelling ROC-curves (performance::performance_roc()).","code":""},{"path":"/news/index.html","id":"see-052","dir":"Changelog","previous_headings":"","what":"see 0.5.2","title":"see 0.5.2","text":"CRAN release: 2020-07-27","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-5-2","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.5.2","text":"plot() correlation::correlation() gains type size argument, plot correlation matrices either tiles circles.","code":""},{"path":"/news/index.html","id":"color-scales-and-palettes-0-5-2","dir":"Changelog","previous_headings":"","what":"Color Scales and Palettes","title":"see 0.5.2","text":"Added new color-palettes. Palettes existing color scales revamped. Added \"light\" palettes dark themes.","code":""},{"path":"/news/index.html","id":"see-051","dir":"Changelog","previous_headings":"","what":"see 0.5.1","title":"see 0.5.1","text":"CRAN release: 2020-06-13","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-5-1","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.5.1","text":"Plot-function parameters::describe_distribution() gains highlight, highlight_color size arguments. Plot-function parameters::describe_distribution() now uses thin bars variables integer values (instead less precise histogram). Plot-function performance::check_normality() gains size point_size arguments. Plot-function performance::check_normality() now also plots normality random effects, check_normality(effects = \"random\") called. Legend labels nopw show percentage-sign applicable (instance, plot.hdi()).","code":""},{"path":"/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.5.1","text":"Fixed issue argument n_column plot.p_significant(), plot.hdi(), plot.p_direction(), stopped working since R 4.0.0. Fixed issue plot.performance_roc() swapped x/y axes.","code":""},{"path":"/news/index.html","id":"see-050","dir":"Changelog","previous_headings":"","what":"see 0.5.0","title":"see 0.5.0","text":"CRAN release: 2020-04-25","code":""},{"path":"/news/index.html","id":"new-functions-0-5-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"see 0.5.0","text":"golden_ratio() added helper get nice proportions.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-5-0","dir":"Changelog","previous_headings":"","what":"New plot functions","title":"see 0.5.0","text":"Added plot-function correlation::summary(). Added plot-function parameters::describe_distribution(). Added plot-function effectsize::equivalence_test(). Added plot-function various effectsize-functions, like effectsize::eta_squared().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-5-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.5.0","text":"plot.estimate_density() now also works density estimation data frames. plot.equivalence_test() now also works frequentist models data frames (see parameters::equivalence_test()). Slightly changed plotting-style plot.equivalence_test().","code":""},{"path":"/news/index.html","id":"see-041","dir":"Changelog","previous_headings":"","what":"see 0.4.1","title":"see 0.4.1","text":"CRAN release: 2020-03-06","code":""},{"path":"/news/index.html","id":"general-0-4-1","dir":"Changelog","previous_headings":"","what":"General","title":"see 0.4.1","text":"Reduce package dependencies.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-4-1","dir":"Changelog","previous_headings":"","what":"New plot-functions","title":"see 0.4.1","text":"Added plot-function correlation::correlation().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-4-1","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.4.1","text":"plot() model_parameters.rma() now arranges facets subgroups (see vignettes). minor improvements plot() parameters::cluster_analysis(). minor improvements plot() parameters::model_parameters.brmsfit(). Plot-function bayestestR::si() gets support_only argument, plot support data “raw” prior posterior distributions.","code":""},{"path":"/news/index.html","id":"see-040","dir":"Changelog","previous_headings":"","what":"see 0.4.0","title":"see 0.4.0","text":"CRAN release: 2020-01-15","code":""},{"path":"/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"see 0.4.0","text":"Arguments ncol nrow plots() renamed n_columns n_rows consistent arguments functions see-package.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-4-0","dir":"Changelog","previous_headings":"","what":"New plot-functions","title":"see 0.4.0","text":"Added plot-function performance::compare_performance(). Added plot-function bayestestR::si().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.4.0","text":"plot()-functions bayestestR-package now also support BFBayesFactor MCMCglmm objects. plot() parameters::model_parameters() now uses fixed axis facets model ordinal cumulative link model (facets scale, thus parameters easier compare).","code":""},{"path":"/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.4.0","text":"Fixed issue group coloring parameters::model_parameters() exponentiate = TRUE. Fixes issue plot.point_estimate() vectors.","code":""},{"path":"/news/index.html","id":"see-030","dir":"Changelog","previous_headings":"","what":"see 0.3.0","title":"see 0.3.0","text":"CRAN release: 2019-11-19","code":""},{"path":"/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"see 0.3.0","text":"how_to_plot() removed time , due inadequate maintenance effort. might re-implemented sometime future…","code":""},{"path":"/news/index.html","id":"general-0-3-0","dir":"Changelog","previous_headings":"","what":"General","title":"see 0.3.0","text":"Improved layout (vertical alignment) plotting-functions bayestestR-package, one parameter. Plots now closer x-axis, removing unnecessary empty space. Labels plot annotations now “human readable”, labelling context sensitive.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-3-0","dir":"Changelog","previous_headings":"","what":"New plot-functions","title":"see 0.3.0","text":"Added coord_radar radar charts. Added plot-function parameters::cluster_analysis(). Added plot-function parameters::principal_components(). Added plot-function parameters::parameters_simulate(). Added plot-function parameters::n_factors(). Added plot-function bayestestR::p_significance().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-3-0","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.3.0","text":"plot() parameters::model_parameters() gets sort-argument sort coefficients. plot() parameters::model_parameters() now also create forest plots meta-analysis. plot() bayestestR::bayesfactor_parameters() plots facets necessary. plot() performance::check_outliers() now also plot multiple methods one plot. Following plot() methods get n_columns-argument, model components like random effects zero-inflation component can plotted multi-column layout: bayestestR::p_direction(), bayestestR::hdi(), bayestestR::rope(), bayestestR::equivalence_test(), parameters::model_parameter(), parameters::parameters_simulate() Following plot() methods get priors priors_alpha arguments, add layer prior samples plot: bayestestR::p_direction(), bayestestR::estimate_density(), bayestestR::point_estimate()","code":""},{"path":"/news/index.html","id":"see-021","dir":"Changelog","previous_headings":"","what":"see 0.2.1","title":"see 0.2.1","text":"CRAN release: 2019-08-01","code":""},{"path":"/news/index.html","id":"general-0-2-1","dir":"Changelog","previous_headings":"","what":"General","title":"see 0.2.1","text":"comprehensive examples available package-website. Added new color-palettes.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-2-1","dir":"Changelog","previous_headings":"","what":"New plot-functions","title":"see 0.2.1","text":"Added plot-function parameters::model_parameters(). Added plot-function bayestestR::point_estimate().","code":""},{"path":"/news/index.html","id":"changes-to-functions-0-2-1","dir":"Changelog","previous_headings":"","what":"Changes to functions","title":"see 0.2.1","text":"plot()-method bayestestR::bayesfactor_savagedickey() gets rope_color rope_alpha-argument plot “null”-interval, null-hypothesis region practical equivalence, just point-null. plot()-method performance::binned_residuals() now also allows modify size colors geoms (related arguments performance::binned_residuals()).","code":""},{"path":"/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.2.1","text":"Fixed issue dark themes text color facet headings.","code":""},{"path":"/news/index.html","id":"see-020","dir":"Changelog","previous_headings":"","what":"see 0.2.0","title":"see 0.2.0","text":"CRAN release: 2019-06-19","code":""},{"path":"/news/index.html","id":"general-0-2-0","dir":"Changelog","previous_headings":"","what":"General","title":"see 0.2.0","text":"geom_point2() now accepts size-aesthetics mapped data. Themes now get base_size base_family argument, line ggplot themes, set default size family plots. plot()-methods now work bayestestR functions work emmGrid-objects (created pairwise comparison package emmeans).","code":""},{"path":"/news/index.html","id":"new-themes-0-2-0","dir":"Changelog","previous_headings":"","what":"New themes","title":"see 0.2.0","text":"theme_lucid(), light clear theme.","code":""},{"path":"/news/index.html","id":"new-plot-functions-0-2-0","dir":"Changelog","previous_headings":"","what":"New plot-functions","title":"see 0.2.0","text":"Added plot-function performance::check_model(). Added plot-function performance::check_normality(). Added plot-function performance::check_heteroscedasticity(). Added plot-function performance::check_outliers(). Added plot-function performance::check_distribution(). Added plot-function performance::check_collinearity(). Added plot-function performance::check_homogeneity().","code":""},{"path":"/news/index.html","id":"new-geoms-0-2-0","dir":"Changelog","previous_headings":"","what":"New geoms","title":"see 0.2.0","text":"geom_poolpoint() geom_pooljitter() draw pool ball points (points labelled observation name).","code":""},{"path":"/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"see 0.2.0","text":"Fixed issues color codes flat-ui palette.","code":""}]
